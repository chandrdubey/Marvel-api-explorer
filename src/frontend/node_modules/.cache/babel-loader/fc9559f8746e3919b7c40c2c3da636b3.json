{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\components\\\\CharectersComponet.js.js\";\nimport { NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport CryptoJS from 'crypto-js';\nimport axios from 'axios';\nimport DisplayContent from './DisplayContent';\nimport { connect } from 'react-redux';\nimport { getDataAction } from '../actions/getDataAction';\nlet ts = new Date().getTime();\nlet hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\nlet url = `?ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`;\n\nclass CharecterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      charecters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://gateway.marvel.com:443/v1/public/characters${url}`).then(response => {\n      // handle success\n      console.log(response.data.data.results);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"header\",\n      className: \" d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid nav_bg \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Marvel Charecters\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, this.state.charecters.map(charecter => /*#__PURE__*/React.createElement(\"div\", {\n      key: charecter.id,\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DisplayContent, {\n      charecter: charecter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    })))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    charecters: state.charecters\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllCharecters: () => dispatch(getDataAction)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharecterComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/components/CharectersComponet.js.js"],"names":["NavLink","React","Component","CryptoJS","axios","DisplayContent","connect","getDataAction","ts","Date","getTime","hash","MD5","toString","url","CharecterComponent","constructor","props","state","charecters","componentDidMount","get","then","response","console","log","data","results","catch","error","render","map","charecter","id","mapStateToProps","mapDispatchToProps","dispatch","getAllCharecters"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AAEA,IAAIC,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAT;AACA,IAAIC,IAAI,GAAGR,QAAQ,CAACS,GAAT,CAAaJ,EAAE,GAAG,0CAAL,GAAkD,kCAA/D,EAAmGK,QAAnG,EAAX;AACA,IAAIC,GAAG,GAAI,OAAMN,EAAG,iDAAgDG,IAAK,EAAzE;;AAEC,MAAMI,kBAAN,SAAiCb,SAAjC,CAA2C;AACzCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAE;AADH,KAAX;AAGD;;AACHC,EAAAA,iBAAiB,GAAE;AACZhB,IAAAA,KAAK,CAACiB,GAAN,CAAW,sDAAqDP,GAAI,EAApE,EACAQ,IADA,CACOC,QAAD,IAAc;AAErB;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,OAA/B;AACA,KALE,EAMFC,KANE,CAMI,UAAUC,KAAV,EAAiB;AACzB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACC,KATG;AAWJ;;AAEFC,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,wBACE,uDACE;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKC,KAAL,CAAWC,UAAX,CAAsBY,GAAtB,CAA0BC,SAAS,iBAE/B;AAAK,MAAA,GAAG,EAAEA,SAAS,CAACC,EAApB;AAAwB,MAAA,SAAS,EAAG,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAID,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,CAFJ,CAFF,CADF,CADF,CADF,CADF,CADF;AAuBD;;AA9CyC;;AAgD5C,MAAME,eAAe,GAAIhB,KAAD,IAAU;AAC9B,SAAO;AACHC,IAAAA,UAAU,EAAGD,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAKA,MAAMgB,kBAAkB,GAAIC,QAAD,IAAa;AACtC,SAAM;AACJC,IAAAA,gBAAgB,EAAG,MAAMD,QAAQ,CAAC7B,aAAD;AAD7B,GAAN;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CAA8CpB,kBAA9C,CAAf","sourcesContent":["import {NavLink} from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport CryptoJS from 'crypto-js'\r\nimport axios from 'axios'\r\nimport DisplayContent from './DisplayContent';\r\nimport {connect} from 'react-redux'\r\nimport {getDataAction} from '../actions/getDataAction';\r\n \r\nlet ts = new Date().getTime();\r\nlet hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\r\nlet url = `?ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`\r\n\r\n class CharecterComponent extends Component {\r\n   constructor(props) {\r\n     super(props);\r\n     this.state={\r\n       charecters: []\r\n     }\r\n   }\r\n componentDidMount(){\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/characters${url}`)\r\n       .then( (response) => {\r\n        \r\n       // handle success\r\n      console.log(response.data.data.results);\r\n     })\r\n     .catch(function (error) {\r\n    // handle error\r\n    console.log(error);\r\n    });\r\n\r\n   }\r\n   \r\n  render() {\r\n    console.log(this.props); \r\n    return (\r\n      <>\r\n        <section id=\"header\" className=\" d-flex align-items-center\">\r\n          <div className=\"container-fluid nav_bg \">\r\n            <div className=\"row\">\r\n              <div className=\"col-10 mx-auto\">\r\n                <h1>Marvel Charecters</h1> \r\n                <div className=\"row \">\r\n                 {\r\n                    this.state.charecters.map(charecter => (\r\n                  \r\n                        <div key={charecter.id} className = \"col-4\">\r\n                        <DisplayContent charecter = {charecter}  />\r\n                        </div>\r\n                    ))       \r\n                 }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        charecters : state.charecters\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    getAllCharecters : () => dispatch(getDataAction)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(CharecterComponent)"]},"metadata":{},"sourceType":"module"}