{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\CharectersComponet.js.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCharectersAction, getCharectersSearchAction, isLoadingAction } from \"../actions/getDataAction\";\nimport DisplayData from \"./DisplayData\";\nimport Spinner from \"./Spinner\"; // let ts = new Date().getTime();\n// let hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\n// let url = `?ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`\n\nclass CharecterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //this.props.getComicsSearch(this.state.query);\n\n      this.props.Loading();\n      this.props.getCharectersSearch(this.state.query);\n    };\n\n    this.state = {\n      query: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //   console.log(this.props);\n    this.props.Loading();\n    this.props.getAllCharecters();\n  }\n\n  render() {\n    console.log(this.props.isLoading);\n    let title = \"Marvel Charecters\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"header\",\n      className: \" d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid nav_bg \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline my-2 my-lg-0\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-data \",\n      type: \"search\",\n      onChange: this.handleChange,\n      placeholder: \"Search\",\n      \"aria-label\": \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    })), this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(DisplayData, {\n      allData: this.props.charecters,\n      reqParams: \"charecters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    charecters: state.marvelData.charecters,\n    isLoading: state.marvelData.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllCharecters: () => dispatch(getCharectersAction()),\n    getCharectersSearch: query => dispatch(getCharectersSearchAction(query)),\n    Loading: () => dispatch(isLoadingAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharecterComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontEnd/src/components/CharectersComponet.js.js"],"names":["React","Component","connect","getCharectersAction","getCharectersSearchAction","isLoadingAction","DisplayData","Spinner","CharecterComponent","constructor","props","handleChange","e","setState","query","target","value","handleSubmit","preventDefault","Loading","getCharectersSearch","state","componentDidMount","getAllCharecters","render","console","log","isLoading","title","charecters","mapStateToProps","marvelData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCharectersAction,\r\n  getCharectersSearchAction,\r\n  isLoadingAction,\r\n} from \"../actions/getDataAction\";\r\nimport DisplayData from \"./DisplayData\";\r\nimport Spinner from \"./Spinner\";\r\n\r\n// let ts = new Date().getTime();\r\n// let hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\r\n// let url = `?ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`\r\n\r\nclass CharecterComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //   console.log(this.props);\r\n    this.props.Loading();\r\n    this.props.getAllCharecters();\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //this.props.getComicsSearch(this.state.query);\r\n    this.props.Loading();\r\n    this.props.getCharectersSearch(this.state.query);\r\n  };\r\n  render() {\r\n    console.log(this.props.isLoading);\r\n\r\n    let title = \"Marvel Charecters\";\r\n    return (\r\n      <>\r\n        <section id=\"header\" className=\" d-flex align-items-center\">\r\n          <div className=\"container-fluid nav_bg \">\r\n            <div className=\"row\">\r\n              <div className=\"col-10 mx-auto\">\r\n                <h1>{title}</h1>\r\n\r\n                <form\r\n                  className=\"form-inline my-2 my-lg-0\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <input\r\n                    className=\"search-data \"\r\n                    type=\"search\"\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  {/* <button className=\"btn btn-outline-success my-2 my-sm-0\"  type=\"submit\">Search</button> */}\r\n                </form>\r\n                {this.props.isLoading ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <DisplayData\r\n                    allData={this.props.charecters}\r\n                    reqParams=\"charecters\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    charecters: state.marvelData.charecters,\r\n    isLoading: state.marvelData.isLoading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCharecters: () => dispatch(getCharectersAction()),\r\n    getCharectersSearch: (query) => dispatch(getCharectersSearchAction(query)),\r\n    Loading: () => dispatch(isLoadingAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharecterComponent);\r\n"]},"metadata":{},"sourceType":"module"}