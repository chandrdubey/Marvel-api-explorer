{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontend\\\\src\\\\components\\\\CharcterPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { getCharecterByIdAction, isLoadingAction, addCharecterToFavAction } from \"../actions/getDataAction\";\nimport { connect } from 'react-redux';\nimport Spinner from \"./Spinner\";\nimport MarvelPageItemComponent from \"./marvelPageItemComponent\";\n\nclass CharcterPageComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFavourite = () => {\n      let token = localStorage.getItem('token');\n      console.log(`he ${token}`);\n\n      if (!token) {\n        this.props.history.push('/login');\n      } else {\n        console.log(\"lo\");\n        this.setState({\n          isFavourite: true\n        });\n        const {\n          match: {\n            params\n          }\n        } = this.props;\n        console.log(`hello ${this.props.currentUser.id}`);\n        const data = {\n          userId: this.props.currentUser.id,\n          charecterId: params.id\n        };\n        this.props.addCharecterFav(data);\n      }\n    };\n\n    this.handleUnFavourite = () => {\n      console.log(\"hello\");\n      this.setState({\n        isFavourite: false\n      });\n    };\n\n    this.state = {\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getCharecterById(params.id);\n    let user = this.props.currentUser;\n    console.log(user);\n\n    if (this.props.isLoggedIn) {\n      let isPresent = user.favcharecter.includes(params.id);\n\n      if (isPresent) {\n        this.setState({\n          isFavourite: true\n        });\n      }\n    }\n  }\n\n  render() {\n    let image, knowMorUrl;\n    let total_comics, comics;\n\n    if (!isEmpty(this.props.charecter)) {\n      image = this.props.charecter.thumbnail.path + '.' + this.props.charecter.thumbnail.extension;\n      total_comics = this.props.charecter.comics.available;\n      comics = this.props.charecter.comics.items;\n      knowMorUrl = this.props.charecter.urls; //  console.log(knowMorUrl);\n    }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\",\n      className: \"container-fluid show-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row set-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5 charecter-image \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      className: \"img-fluid page-image\",\n      alt: \"cahrecter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 charecter-detail \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, this.props.charecter.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, this.state.isFavourite ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleUnFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }\n    }, \"UnFavourite\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }\n    }, \"Favourite\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, this.props.charecter.description), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }\n    }, this.props.charecter.name, \" : Comics (\", total_comics, \")\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(MarvelPageItemComponent, {\n      comics: comics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }))), knowMorUrl && /*#__PURE__*/React.createElement(\"a\", {\n      href: knowMorUrl[0].url,\n      className: \"btn btn-get-started\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 35\n      }\n    }, \"Know more\"))))))));\n  }\n\n}\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n    charecter: state.marvelData.charecter,\n    isLoading: state.marvelData.isLoading,\n    isLoggedIn: state.auth.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCharecterById: id => dispatch(getCharecterByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction()),\n    addCharecterFav: data => dispatch(addCharecterToFavAction(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharcterPageComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontend/src/components/CharcterPageComponent.js"],"names":["React","Component","getCharecterByIdAction","isLoadingAction","addCharecterToFavAction","connect","Spinner","MarvelPageItemComponent","CharcterPageComponent","constructor","props","handleFavourite","token","localStorage","getItem","console","log","history","push","setState","isFavourite","match","params","currentUser","id","data","userId","charecterId","addCharecterFav","handleUnFavourite","state","componentDidMount","Loading","getCharecterById","user","isLoggedIn","isPresent","favcharecter","includes","render","image","knowMorUrl","total_comics","comics","isEmpty","charecter","thumbnail","path","extension","available","items","urls","isLoading","name","description","url","obj","key","hasOwnProperty","mapStateToProps","auth","marvelData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCharecterByIdAction, isLoadingAction , addCharecterToFavAction} from \"../actions/getDataAction\";\r\nimport {connect} from 'react-redux'\r\nimport Spinner from \"./Spinner\";\r\nimport MarvelPageItemComponent from \"./marvelPageItemComponent\";\r\n\r\n\r\nclass CharcterPageComponent extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isFavourite:false\r\n      }\r\n    }\r\n    \r\n    componentDidMount (){\r\n        const { match: { params } } = this.props;\r\n        this.props.Loading();\r\n        this.props.getCharecterById(params.id);\r\n        let user =this.props.currentUser;\r\n        console.log(user);\r\n        if(this.props.isLoggedIn){\r\n           let isPresent = user.favcharecter.includes(params.id);\r\n          if(isPresent){\r\n                  this.setState({\r\n                    isFavourite:true\r\n                  });\r\n          }\r\n        }   \r\n    }\r\n    handleFavourite =() =>{\r\n      let token = localStorage.getItem('token');\r\n      console.log(`he ${ token}`)\r\n      if(!token)\r\n      {\r\n        this.props.history.push('/login');\r\n      }else{\r\n        console.log(\"lo\");\r\n        this.setState({\r\n          isFavourite:true\r\n        });\r\n        const { match: { params } } = this.props;\r\n        console.log(`hello ${ this.props.currentUser.id}`)\r\n        const data ={\r\n          userId: this.props.currentUser.id,\r\n          charecterId: params.id\r\n        }\r\n        this.props.addCharecterFav(data);\r\n      }\r\n     \r\n    }\r\n    handleUnFavourite =() =>{\r\n      console.log(\"hello\")\r\n      this.setState({\r\n        isFavourite:false\r\n      });\r\n    }\r\n  render() {\r\n    let image,knowMorUrl;\r\n    let total_comics,comics;\r\n      if(!isEmpty(this.props.charecter)){\r\n    \r\n        image=this.props.charecter.thumbnail.path + '.' +  this.props.charecter.thumbnail.extension;\r\n\r\n        total_comics = this.props.charecter.comics.available;\r\n        comics = this.props.charecter.comics.items;\r\n        knowMorUrl=this.props.charecter.urls;\r\n\r\n      //  console.log(knowMorUrl);\r\n      }\r\n    return (\r\n      this.props.isLoading? (<Spinner />) : ( <>\r\n        <div id=\"header\" className=\"container-fluid show-page\">\r\n          <div className=\"row set-row\">\r\n            <div className=\"col-10 mx-auto\">\r\n            <div className=\"row \">\r\n                <div className =\"col-5 charecter-image \">\r\n                  \r\n                   <img src={image} className=\"img-fluid page-image\" alt=\"cahrecter\" />\r\n                </div>\r\n                <div className =\"col-7 charecter-detail \">\r\n                <div className=\"\">  \r\n                <h3>{this.props.charecter.name}\r\n                <span className=\"float-right\" > \r\n                {\r\n                  this.state.isFavourite ? \r\n                   <button className=\"btn  fav-btn\" onClick={this.handleUnFavourite  }>UnFavourite</button> \r\n                   : <button className=\"btn  fav-btn\" onClick={this.handleFavourite  }>Favourite</button>\r\n                }\r\n               \r\n                </span>\r\n                </h3>\r\n                <hr/>\r\n                <p>{this.props.charecter.description}</p> \r\n                 <div>\r\n                   <h3>{this.props.charecter.name} : Comics ({total_comics})</h3>\r\n                   <hr/>\r\n                   <ul>                \r\n                      <MarvelPageItemComponent comics = {comics}/>\r\n                   </ul>      \r\n                 </div>\r\n                 {\r\n                   knowMorUrl &&  <a href={knowMorUrl[0].url} className=\"btn btn-get-started\">Know more</a>\r\n                 }\r\n                 </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>)\r\n\r\n    );\r\n  }\r\n}\r\nfunction isEmpty(obj) {\r\n  for(var key in obj) {\r\n      if(obj.hasOwnProperty(key))\r\n          return false;\r\n  }\r\n  return true;\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n         currentUser :state.auth.currentUser,\r\n         charecter : state.marvelData.charecter,\r\n          isLoading :  state.marvelData.isLoading,\r\n          isLoggedIn: state.auth.isLoggedIn\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    getCharecterById : (id) => dispatch(getCharecterByIdAction(id)),\r\n    Loading : () => dispatch(isLoadingAction()),\r\n    addCharecterFav : (data)=> dispatch(addCharecterToFavAction(data))\r\n  }\r\n}\r\nexport default connect(mapStateToProps , mapDispatchToProps)(CharcterPageComponent);\r\n"]},"metadata":{},"sourceType":"module"}