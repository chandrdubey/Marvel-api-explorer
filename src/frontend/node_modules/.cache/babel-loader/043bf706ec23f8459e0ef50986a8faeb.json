{"ast":null,"code":"import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport { response } from 'express';\nlet ts = new Date().getTime();\nlet hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\nlet url = `ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`;\nexport const getCharectersAction = () => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/characters?${url}`).then(response => {\n      dispatch({\n        type: 'ALL_CHARECTERS',\n        payload: response.data.data.results\n      }); // handle success\n      //      console.log(`https://gateway.marvel.com:443/v1/public/characters?${url}`)\n\n      console.log(response.data.data.results);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const getComicsAction = () => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/comics?orderBy=title&${url}`).then(response => {\n      dispatch({\n        type: 'ALL_COMICS',\n        payload: response.data.data.results\n      }); // handle success\n\n      console.log(response.data.data.results);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const getComicsSearchAction = query => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/comics?titleStartsWith=${query}&${url}`).then(response => {\n      dispatch({\n        type: 'SEARCH_COMICS',\n        payload: response.data.data.results\n      }); // handle success\n      //      console.log('hi');\n      //     console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const getCharectersSearchAction = query => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=${query}&${url}`).then(response => {\n      dispatch({\n        type: 'SEARCH_CHARECTERS',\n        payload: response.data.data.results\n      }); // handle success\n      //  console.log('hi');\n      //  console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const isLoadingAction = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING'\n    });\n  };\n};\nexport const getCharecterByIdAction = id => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/characters/${id}?${url}`).then(response => {\n      console.log(response.data.data.results[0]);\n      dispatch({\n        type: 'ONE_CHARECTER',\n        payload: response.data.data.results[0]\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const addCharecterToFavAction = (id, user_id) => {\n  return dispatch => {\n    axios.post(`\"http://localhost:5000/users/${user_id}/charecters/favourite`, id).then(response => {\n      dispatch({\n        type: 'ADD_FAVOURITE_CHARECTER',\n        payload: response.data.user\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontend/src/actions/getDataAction.js"],"names":["axios","CryptoJS","response","ts","Date","getTime","hash","MD5","toString","url","getCharectersAction","dispatch","get","then","type","payload","data","results","console","log","catch","error","getComicsAction","getComicsSearchAction","query","getCharectersSearchAction","isLoadingAction","getCharecterByIdAction","id","addCharecterToFavAction","user_id","post","user"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport CryptoJS from 'crypto-js'\r\nimport { response } from 'express';\r\n\r\n \r\nlet ts = new Date().getTime();\r\nlet hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\r\nlet url = `ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`\r\n\r\nexport const getCharectersAction = () => {\r\n    return (dispatch) =>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/characters?${url}`)\r\n        .then( (response) => {\r\n            dispatch({type:'ALL_CHARECTERS', payload:response.data.data.results});\r\n        // handle success\r\n  //      console.log(`https://gateway.marvel.com:443/v1/public/characters?${url}`)\r\n      console.log(response.data.data.results);\r\n      })\r\n      .catch(function (error) {\r\n     // handle error\r\n     console.log(error);\r\n     });\r\n    }\r\n}\r\n\r\nexport const getComicsAction = () => {\r\n  return (dispatch) =>{\r\n      axios.get(`https://gateway.marvel.com:443/v1/public/comics?orderBy=title&${url}`)\r\n      .then( (response) => {\r\n          dispatch({type:'ALL_COMICS', payload:response.data.data.results});\r\n      // handle success\r\n     console.log(response.data.data.results);\r\n    })\r\n    .catch(function (error) {\r\n   // handle error\r\n   console.log(error);\r\n   });\r\n  }\r\n}\r\n\r\nexport const getComicsSearchAction = (query) =>{\r\n    return  (dispatch) =>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/comics?titleStartsWith=${query}&${url}`)\r\n        .then( (response) => {\r\n            dispatch({type:'SEARCH_COMICS', payload:response.data.data.results});\r\n        // handle success\r\n  //      console.log('hi');\r\n  //     console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n     // handle error\r\n     console.log(error);\r\n     });\r\n}\r\n}\r\n\r\nexport const getCharectersSearchAction = (query) =>{ \r\n    return  (dispatch) =>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=${query}&${url}`)\r\n        .then( (response) => {\r\n            dispatch({type:'SEARCH_CHARECTERS', payload:response.data.data.results});\r\n        // handle success\r\n      //  console.log('hi');\r\n     //  console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n     // handle error\r\n     console.log(error);\r\n     });\r\n}\r\n}\r\nexport const isLoadingAction = () =>{\r\n    return (dispatch) => {\r\n        dispatch({type : 'LOADING'})\r\n    }\r\n}\r\n\r\nexport const getCharecterByIdAction = (id)=>{\r\n    return (dispatch)=>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/characters/${id}?${url}`)\r\n        .then(response =>{\r\n             console.log(response.data.data.results[0]);\r\n             dispatch({type:'ONE_CHARECTER', payload:response.data.data.results[0]});\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n  \r\n}\r\n\r\nexport const addCharecterToFavAction = (id, user_id )=>{\r\n     return (dispatch)=>{   \r\n         axios.post(`\"http://localhost:5000/users/${user_id}/charecters/favourite`, id)\r\n         .then(response=> {\r\n            dispatch({type:'ADD_FAVOURITE_CHARECTER', payload:response.data.user});\r\n         })\r\n     }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}