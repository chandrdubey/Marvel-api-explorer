{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\react.js\\\\learning react\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\ComicPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./Spinner\";\nimport { getComicByIdAction, isLoadingAction, addComicToFavAction, removeComicToFavAction } from \"../actions/getDataAction\";\n\nclass ComicPageComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFavourite = () => {\n      if (!this.props.isLoggedIn) {\n        this.props.history.push(\"/login\");\n      } else {\n        this.setState({\n          isFavourite: true\n        });\n        const userId = this.props.currentUser.id;\n        const data = {\n          comic_id: this.props.comic.id,\n          title: this.props.comic.title,\n          image: this.props.comic.thumbnail.path + \".\" + this.props.comic.thumbnail.extension\n        };\n        console.log(\"hil\");\n        console.log(data);\n        this.props.addComicFav(userId, data);\n      }\n    };\n\n    this.handleUnFavourite = () => {\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      const userId = this.props.currentUser.id;\n      console.log(\"hello\");\n      this.setState({\n        isFavourite: false\n      });\n      this.props.removeComicToFav(userId, params.id);\n    };\n\n    this.state = {\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getComicById(params.id);\n    let user = this.props.currentUser;\n    console.log(user);\n    console.log(`is ${this.props.isLoggedIn}`);\n    console.log(this.props.favComics);\n\n    if (this.props.favComics) {\n      if (this.props.favComics.length > 0 && this.props.favComics.some(comicMarvel => comicMarvel.comic_id === params.id)) {\n        console.log(\"hello indaia\");\n        this.setState({\n          isFavourite: true\n        });\n      }\n    }\n  }\n\n  render() {\n    let image, knowMorUrl;\n    let publish, price, creators;\n\n    if (!isEmpty(this.props.comic)) {\n      const data = {\n        comic_id: this.props.comic.id,\n        title: this.props.comic.title,\n        image: this.props.comic.thumbnail.path + \".\" + this.props.comic.thumbnail.extension\n      };\n      console.log(data);\n      image = this.props.comic.thumbnail.path + \".\" + this.props.comic.thumbnail.extension;\n      creators = unique(this.props.comic.creators.items);\n      console.log(creators);\n      knowMorUrl = this.props.comic.urls;\n      if (creators.length === 0) creators = undefined;\n      price = this.props.comic.prices[0].price;\n      publish = this.props.comic.dates[0].date.substring(0, 10);\n      console.log(publish); //  console.log(knowMorUrl);\n    }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"margin-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 35\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\",\n      className: \"container-fluid show-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row set-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 col-sm-12 charecter-image \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      className: \"img-fluid page-image\",\n      alt: \"charecter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-7 col-sm-12 charecter-detail  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10 col-sm-9 char-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, this.props.comic.title, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, this.state.isFavourite ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleUnFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"UnFavourite\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"Favourite\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, this.props.comic.description), this.props.comic.series && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, \" Series\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, this.props.comic.series.name)), creators && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, \" Creators\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, creators && creators.map(creator => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      key: creator.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }\n    }, \" \", creator.role, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }\n    }, creator.name)))), publish && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, \" Published on \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }, publish)), price && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, \" Price \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }, \"$\", price)), knowMorUrl && /*#__PURE__*/React.createElement(\"a\", {\n      href: knowMorUrl[0].url,\n      className: \"btn btn-get-started\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"Know more\")))))));\n  }\n\n} //this function is used to check whther an object is empty or not\n\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n} //This function used to filter the creators\n\n\nfunction unique(arr) {\n  let distinct = [];\n  arr.forEach(x => {\n    if (!distinct.some(creator => creator.role === x.role)) {\n      distinct.push(x);\n    }\n  });\n  return distinct;\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n    comic: state.marvelData.comic,\n    isLoading: state.marvelData.isLoading,\n    isLoggedIn: state.auth.isLoggedIn,\n    favComics: state.marvelData.favComics\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getComicById: id => dispatch(getComicByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction()),\n    addComicFav: (userId, data) => dispatch(addComicToFavAction(userId, data)),\n    removeComicToFav: (userId, comicId) => dispatch(removeComicToFavAction(userId, comicId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);","map":{"version":3,"sources":["D:/web d/react.js/learning react/marvel-superstars/src/frontEnd/src/components/ComicPageComponent.js"],"names":["React","Component","connect","Spinner","getComicByIdAction","isLoadingAction","addComicToFavAction","removeComicToFavAction","ComicPageComponent","constructor","props","handleFavourite","isLoggedIn","history","push","setState","isFavourite","userId","currentUser","id","data","comic_id","comic","title","image","thumbnail","path","extension","console","log","addComicFav","handleUnFavourite","match","params","removeComicToFav","state","componentDidMount","Loading","getComicById","user","favComics","length","some","comicMarvel","render","knowMorUrl","publish","price","creators","isEmpty","unique","items","urls","undefined","prices","dates","date","substring","isLoading","description","series","name","map","creator","role","url","obj","key","hasOwnProperty","arr","distinct","forEach","x","mapStateToProps","auth","marvelData","mapDispatchToProps","dispatch","comicId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,mBAA9C,EAAmEC,sBAAnE,QAAiG,0BAAjG;;AAGA,MAAMC,kBAAN,SAAiCP,SAAjC,CAA2C;AACzCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,eA3BmB,GA2BD,MAAM;AACtB,UAAI,CAAC,KAAKD,KAAL,CAAWE,UAAhB,EAA4B;AAC1B,aAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,OAFD,MAEO;AACL,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE;AADD,SAAd;AAIA,cAAMC,MAAM,GAAG,KAAKP,KAAL,CAAWQ,WAAX,CAAuBC,EAAtC;AACA,cAAMC,IAAI,GAAG;AACXC,UAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWY,KAAX,CAAiBH,EADhB;AAEXI,UAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWY,KAAX,CAAiBC,KAFb;AAGXC,UAAAA,KAAK,EACH,KAAKd,KAAL,CAAWY,KAAX,CAAiBG,SAAjB,CAA2BC,IAA3B,GACA,GADA,GAEA,KAAKhB,KAAL,CAAWY,KAAX,CAAiBG,SAAjB,CAA2BE;AANlB,SAAb;AAQAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,aAAKV,KAAL,CAAWoB,WAAX,CAAuBb,MAAvB,EAA+BG,IAA/B;AACD;AACF,KAhDkB;;AAAA,SAkDnBW,iBAlDmB,GAkDC,MAAM;AACxB,YAAM;AACJC,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AADH,UAEF,KAAKvB,KAFT;AAGA,YAAMO,MAAM,GAAG,KAAKP,KAAL,CAAWQ,WAAX,CAAuBC,EAAtC;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKd,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE;AADD,OAAd;AAGA,WAAKN,KAAL,CAAWwB,gBAAX,CAA4BjB,MAA5B,EAAoCgB,MAAM,CAACd,EAA3C;AACD,KA5DkB;;AAEjB,SAAKgB,KAAL,GAAa;AACXnB,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AACDoB,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AACJJ,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AADH,QAEF,KAAKvB,KAFT;AAGA,SAAKA,KAAL,CAAW2B,OAAX;AACA,SAAK3B,KAAL,CAAW4B,YAAX,CAAwBL,MAAM,CAACd,EAA/B;AACA,QAAIoB,IAAI,GAAG,KAAK7B,KAAL,CAAWQ,WAAtB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAa,MAAK,KAAKnB,KAAL,CAAWE,UAAW,EAAxC;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAW8B,SAAvB;;AACA,QAAG,KAAK9B,KAAL,CAAW8B,SAAd,EAAwB;AAErB,UAAG,KAAK9B,KAAL,CAAW8B,SAAX,CAAqBC,MAArB,GAA8B,CAA9B,IAAmC,KAAK/B,KAAL,CAAW8B,SAAX,CAAqBE,IAArB,CAA0BC,WAAW,IAAEA,WAAW,CAACtB,QAAZ,KAAyBY,MAAM,CAACd,EAAvE,CAAtC,EACC;AACES,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACI,aAAKd,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAC;AADA,SAAd;AAGN;AACH;AACF;;AAmCD4B,EAAAA,MAAM,GAAG;AACP,QAAIpB,KAAJ,EAAWqB,UAAX;AACA,QAAKC,OAAL,EAAcC,KAAd,EAAqBC,QAArB;;AACA,QAAI,CAACC,OAAO,CAAC,KAAKvC,KAAL,CAAWY,KAAZ,CAAZ,EAAgC;AAC9B,YAAMF,IAAI,GAAG;AACXC,QAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWY,KAAX,CAAiBH,EADhB;AAEXI,QAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWY,KAAX,CAAiBC,KAFb;AAGXC,QAAAA,KAAK,EACH,KAAKd,KAAL,CAAWY,KAAX,CAAiBG,SAAjB,CAA2BC,IAA3B,GACA,GADA,GAEA,KAAKhB,KAAL,CAAWY,KAAX,CAAiBG,SAAjB,CAA2BE;AANlB,OAAb;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAI,MAAAA,KAAK,GACH,KAAKd,KAAL,CAAWY,KAAX,CAAiBG,SAAjB,CAA2BC,IAA3B,GACA,GADA,GAEA,KAAKhB,KAAL,CAAWY,KAAX,CAAiBG,SAAjB,CAA2BE,SAH7B;AAKAqB,MAAAA,QAAQ,GAAGE,MAAM,CAAC,KAAKxC,KAAL,CAAWY,KAAX,CAAiB0B,QAAjB,CAA0BG,KAA3B,CAAjB;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACAH,MAAAA,UAAU,GAAG,KAAKnC,KAAL,CAAWY,KAAX,CAAiB8B,IAA9B;AACA,UAAIJ,QAAQ,CAACP,MAAT,KAAoB,CAAxB,EAA2BO,QAAQ,GAAGK,SAAX;AAC3BN,MAAAA,KAAK,GAAG,KAAKrC,KAAL,CAAWY,KAAX,CAAiBgC,MAAjB,CAAwB,CAAxB,EAA2BP,KAAnC;AACAD,MAAAA,OAAO,GAAG,KAAKpC,KAAL,CAAWY,KAAX,CAAiBiC,KAAjB,CAAuB,CAAvB,EAA0BC,IAA1B,CAA+BC,SAA/B,CAAyC,CAAzC,EAA4C,EAA5C,CAAV;AACA7B,MAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ,EArB8B,CAuB9B;AACD;;AACD,WAAO,KAAKpC,KAAL,CAAWgD,SAAX,gBACL;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CADK,gBAGL,uDACE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,2BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAElC,KADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,GAAG,EAAC,WAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWY,KAAX,CAAiBC,KAAtB,MADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKY,KAAL,CAAWnB,WAAX,gBACC;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,KAAKe,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,gBAQC;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,KAAKpB,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATJ,CAJF,CADF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWY,KAAX,CAAiBqC,WAArB,CAxBF,EAyBG,KAAKjD,KAAL,CAAWY,KAAX,CAAiBsC,MAAjB,iBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKlD,KAAL,CAAWY,KAAX,CAAiBsC,MAAjB,CAAwBC,IAA5B,CAHF,CA1BJ,EAiCGb,QAAQ,iBACP,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlCJ,eAuCE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,IACPA,QAAQ,CAACc,GAAT,CAAcC,OAAD,iBACX;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEA,OAAO,CAACF,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAME,OAAO,CAACC,IAAd,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACF,IAAZ,CAFF,CADF,CAFJ,CAvCF,EAiDGf,OAAO,iBACN,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAJ,CAHF,CAlDJ,EAyDGC,KAAK,iBACJ,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKA,KAAL,CAHF,CA1DJ,EAiEGF,UAAU,iBACT;AAAG,MAAA,IAAI,EAAEA,UAAU,CAAC,CAAD,CAAV,CAAcoB,GAAvB;AAA4B,MAAA,SAAS,EAAC,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlEJ,CARF,CADF,CADF,CADF,CADF,CAHF;AA4FD;;AAtLwC,C,CAwL3C;;;AACA,SAAShB,OAAT,CAAiBiB,GAAjB,EAAsB;AACpB,OAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B,OAAO,KAAP;AAC9B;;AACD,SAAO,IAAP;AACD,C,CAED;;;AACA,SAASjB,MAAT,CAAgBmB,GAAhB,EAAqB;AACnB,MAAIC,QAAQ,GAAG,EAAf;AAEAD,EAAAA,GAAG,CAACE,OAAJ,CAAaC,CAAD,IAAO;AACjB,QAAI,CAACF,QAAQ,CAAC5B,IAAT,CAAeqB,OAAD,IAAaA,OAAO,CAACC,IAAR,KAAiBQ,CAAC,CAACR,IAA9C,CAAL,EAA0D;AACxDM,MAAAA,QAAQ,CAACxD,IAAT,CAAc0D,CAAd;AACD;AACF,GAJD;AAKA,SAAOF,QAAP;AACD;;AACD,MAAMG,eAAe,GAAItC,KAAD,IAAW;AACjC,SAAO;AACLjB,IAAAA,WAAW,EAAEiB,KAAK,CAACuC,IAAN,CAAWxD,WADnB;AAELI,IAAAA,KAAK,EAAEa,KAAK,CAACwC,UAAN,CAAiBrD,KAFnB;AAGLoC,IAAAA,SAAS,EAAEvB,KAAK,CAACwC,UAAN,CAAiBjB,SAHvB;AAIL9C,IAAAA,UAAU,EAAEuB,KAAK,CAACuC,IAAN,CAAW9D,UAJlB;AAKL4B,IAAAA,SAAS,EAACL,KAAK,CAACwC,UAAN,CAAiBnC;AALtB,GAAP;AAOD,CARD;;AASA,MAAMoC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLvC,IAAAA,YAAY,EAAGnB,EAAD,IAAQ0D,QAAQ,CAACzE,kBAAkB,CAACe,EAAD,CAAnB,CADzB;AAELkB,IAAAA,OAAO,EAAE,MAAMwC,QAAQ,CAACxE,eAAe,EAAhB,CAFlB;AAGLyB,IAAAA,WAAW,EAAG,CAACb,MAAD,EAAQG,IAAR,KAAgByD,QAAQ,CAACvE,mBAAmB,CAACW,MAAD,EAASG,IAAT,CAApB,CAHjC;AAILc,IAAAA,gBAAgB,EAAE,CAACjB,MAAD,EAAS6D,OAAT,KAAqBD,QAAQ,CAACtE,sBAAsB,CAACU,MAAD,EAAS6D,OAAT,CAAvB;AAJ1C,GAAP;AAOD,CARD;;AASA,eAAe5E,OAAO,CAACuE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpE,kBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport { getComicByIdAction, isLoadingAction, addComicToFavAction, removeComicToFavAction } from \"../actions/getDataAction\";\r\n\r\n\r\nclass ComicPageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFavourite: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    this.props.Loading();\r\n    this.props.getComicById(params.id);\r\n    let user = this.props.currentUser;\r\n    console.log(user);\r\n    console.log(`is ${this.props.isLoggedIn}`);\r\n    console.log(this.props.favComics);\r\n    if(this.props.favComics){\r\n\r\n       if(this.props.favComics.length > 0 && this.props.favComics.some(comicMarvel=>comicMarvel.comic_id === params.id))\r\n        {\r\n          console.log(\"hello indaia\");\r\n              this.setState({\r\n                isFavourite:true\r\n              });\r\n       }\r\n    }\r\n  }\r\n  handleFavourite = () => {\r\n    if (!this.props.isLoggedIn) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      this.setState({\r\n        isFavourite: true,\r\n      });\r\n      \r\n      const userId = this.props.currentUser.id;\r\n      const data = {\r\n        comic_id: this.props.comic.id,\r\n        title: this.props.comic.title,\r\n        image:\r\n          this.props.comic.thumbnail.path +\r\n          \".\" +\r\n          this.props.comic.thumbnail.extension,\r\n      }\r\n      console.log(\"hil\")\r\n      console.log(data);\r\n      this.props.addComicFav(userId, data);\r\n    }\r\n  };\r\n  //this function used to handle the unfavourite button's functions\r\n  handleUnFavourite = () => {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    const userId = this.props.currentUser.id;\r\n    console.log(\"hello\");\r\n    this.setState({\r\n      isFavourite: false,\r\n    });\r\n    this.props.removeComicToFav(userId, params.id);\r\n  };\r\n  render() {\r\n    let image, knowMorUrl;\r\n    let  publish, price, creators;\r\n    if (!isEmpty(this.props.comic)) {\r\n      const data = {\r\n        comic_id: this.props.comic.id,\r\n        title: this.props.comic.title,\r\n        image:\r\n          this.props.comic.thumbnail.path +\r\n          \".\" +\r\n          this.props.comic.thumbnail.extension,\r\n      }\r\n      console.log(data);\r\n      image =\r\n        this.props.comic.thumbnail.path +\r\n        \".\" +\r\n        this.props.comic.thumbnail.extension;\r\n\r\n      creators = unique(this.props.comic.creators.items);\r\n      console.log(creators);\r\n      knowMorUrl = this.props.comic.urls;\r\n      if (creators.length === 0) creators = undefined;\r\n      price = this.props.comic.prices[0].price;\r\n      publish = this.props.comic.dates[0].date.substring(0, 10);\r\n      console.log(publish);\r\n\r\n      //  console.log(knowMorUrl);\r\n    }\r\n    return this.props.isLoading ? (\r\n      <div className=\"margin-top\"><Spinner /></div> \r\n    ) : (\r\n      <>\r\n        <div id=\"header\" className=\"container-fluid show-page\">\r\n          <div className=\"row set-row\">\r\n            <div className=\"col-10 mx-auto\">\r\n              <div className=\"row \">\r\n                <div className=\"col-md-5 col-sm-12 charecter-image \">\r\n                  <img\r\n                    src={image}\r\n                    className=\"img-fluid page-image\"\r\n                    alt=\"charecter\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-7 col-sm-12 charecter-detail  \">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-10 col-sm-9 char-page\">\r\n                      <h3>{this.props.comic.title} </h3>\r\n                    </div>\r\n                    <div className=\"col-md-2 col-sm-3\">\r\n                      {this.state.isFavourite ? (\r\n                        <button\r\n                          className=\"btn  fav-btn\"\r\n                          onClick={this.handleUnFavourite}\r\n                        >\r\n                          UnFavourite\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"btn  fav-btn\"\r\n                          onClick={this.handleFavourite}\r\n                        >\r\n                          Favourite\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <hr/>\r\n                  <p>{this.props.comic.description}</p>\r\n                  {this.props.comic.series && (\r\n                    <>\r\n                      <h3> Series</h3>\r\n                      <hr />\r\n                      <p>{this.props.comic.series.name}</p>\r\n                    </>\r\n                  )}\r\n\r\n                  {creators && (\r\n                    <>\r\n                      <h3> Creators</h3>\r\n                      <hr />\r\n                    </>\r\n                  )}\r\n                  <div className=\"row\">\r\n                    {creators &&\r\n                      creators.map((creator) => (\r\n                        <div className=\"col-6\" key={creator.name}>\r\n                          <h4> {creator.role} </h4>\r\n                          <p>{creator.name}</p>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n\r\n                  {publish && (\r\n                    <>\r\n                      <h3> Published on </h3>\r\n                      <hr />\r\n                      <p>{publish}</p>\r\n                    </>\r\n                  )}\r\n\r\n                  {price && (\r\n                    <>\r\n                      <h3> Price </h3>\r\n                      <hr />\r\n                      <p>${price}</p>\r\n                    </>\r\n                  )}\r\n                \r\n                  {knowMorUrl && (\r\n                    <a href={knowMorUrl[0].url} className=\"btn btn-get-started\">\r\n                      Know more\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n//this function is used to check whther an object is empty or not\r\nfunction isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n//This function used to filter the creators\r\nfunction unique(arr) {\r\n  let distinct = [];\r\n\r\n  arr.forEach((x) => {\r\n    if (!distinct.some((creator) => creator.role === x.role)) {\r\n      distinct.push(x);\r\n    }\r\n  });\r\n  return distinct;\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.auth.currentUser,\r\n    comic: state.marvelData.comic,\r\n    isLoading: state.marvelData.isLoading,\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    favComics:state.marvelData.favComics\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getComicById: (id) => dispatch(getComicByIdAction(id)),\r\n    Loading: () => dispatch(isLoadingAction()),\r\n    addComicFav : (userId,data)=> dispatch(addComicToFavAction(userId, data)),\r\n    removeComicToFav :(userId, comicId) => dispatch(removeComicToFavAction(userId, comicId))\r\n   \r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);\r\n"]},"metadata":{},"sourceType":"module"}