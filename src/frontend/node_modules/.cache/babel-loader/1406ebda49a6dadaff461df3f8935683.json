{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\CharectersComponet.js.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCharectersAction, getCharectersSearchAction, isLoadingAction } from \"../actions/getDataAction\";\nimport DisplayData from \"./DisplayData\";\nimport Spinner from \"./Spinner\"; //import Pagination from \"./Pagination\";\n\nimport Pagination from \"react-js-pagination\"; // let ts = new Date().getTime();\n// let hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\n// let url = `?ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`\n\nclass CharecterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //this.props.getComicsSearch(this.state.query);\n\n      if (this.state.query) this.props.Loading();\n      this.props.getCharectersSearch(this.state.query);\n    };\n\n    this.state = {\n      query: \"\",\n      activePage: 1,\n      dataPerPage: 12\n    };\n  }\n\n  componentDidMount() {\n    //   console.log(this.props);\n    this.props.Loading();\n    this.props.getAllCharecters();\n  }\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({\n      activePage: pageNumber\n    });\n  }\n\n  render() {\n    console.log(this.props.isLoading);\n    let title = \"Marvel Charecters List\";\n    let indexLast = this.state.dataPerPage * this.state.activePage;\n    let indexFirst = indexLast - this.state.dataPerPage;\n    let pageChar = this.props.charecters.slice(indexFirst, indexLast);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"header\",\n      className: \" d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid nav_bg \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto  marginPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline my-2 my-lg-0\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-data \",\n      type: \"search\",\n      onChange: this.handleChange,\n      placeholder: \"Search\",\n      \"aria-label\": \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    })), this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DisplayData, {\n      allData: pageChar,\n      reqParams: \"charecters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      hideDisabled: true,\n      activePage: this.state.activePage,\n      itemsCountPerPage: this.state.dataPerPage,\n      totalItemsCount: this.props.charecters.length,\n      pageRangeDisplayed: 5,\n      onChange: this.handlePageChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    charecters: state.marvelData.charecters,\n    isLoading: state.marvelData.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllCharecters: () => dispatch(getCharectersAction()),\n    getCharectersSearch: query => dispatch(getCharectersSearchAction(query)),\n    Loading: () => dispatch(isLoadingAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharecterComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontEnd/src/components/CharectersComponet.js.js"],"names":["React","Component","connect","getCharectersAction","getCharectersSearchAction","isLoadingAction","DisplayData","Spinner","Pagination","CharecterComponent","constructor","props","handleChange","e","setState","query","target","value","handleSubmit","preventDefault","state","Loading","getCharectersSearch","activePage","dataPerPage","componentDidMount","getAllCharecters","handlePageChange","pageNumber","console","log","render","isLoading","title","indexLast","indexFirst","pageChar","charecters","slice","length","bind","mapStateToProps","marvelData","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,mBADF,EAEEC,yBAFF,EAGEC,eAHF,QAIO,0BAJP;AAKA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CAEA;AACA;AACA;;AAEA,MAAMC,kBAAN,SAAiCR,SAAjC,CAA2C;AACzCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,YAdmB,GAcHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AADJ,OAAd;AAGD,KAlBkB;;AAAA,SAmBnBC,YAnBmB,GAmBHL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF,GADoB,CAEpB;;AACA,UAAG,KAAKC,KAAL,CAAWL,KAAd,EACA,KAAKJ,KAAL,CAAWU,OAAX;AACA,WAAKV,KAAL,CAAWW,mBAAX,CAA+B,KAAKF,KAAL,CAAWL,KAA1C;AACD,KAzBkB;;AAEjB,SAAKK,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE,EADI;AAEXQ,MAAAA,UAAU,EAAE,CAFD;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKd,KAAL,CAAWU,OAAX;AACA,SAAKV,KAAL,CAAWe,gBAAX;AACD;;AAcDC,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBF,UAAW,EAAzC;AACA,SAAKd,QAAL,CAAc;AAACS,MAAAA,UAAU,EAAEK;AAAb,KAAd;AACD;;AACDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWqB,SAAvB;AAEA,QAAIC,KAAK,GAAG,wBAAZ;AACA,QAAIC,SAAS,GAAG,KAAKd,KAAL,CAAWI,WAAX,GAAyB,KAAKJ,KAAL,CAAWG,UAApD;AACA,QAAIY,UAAU,GAAGD,SAAS,GAAG,KAAKd,KAAL,CAAWI,WAAxC;AACC,QAAIY,QAAQ,GAAG,KAAKzB,KAAL,CAAW0B,UAAX,CAAsBC,KAAtB,CAA4BH,UAA5B,EAAwCD,SAAxC,CAAf;AAED,wBACE,uDACE;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAL,CADF,eAGE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,QAAQ,EAAE,KAAKf,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,KAAKN,YAHjB;AAIE,MAAA,WAAW,EAAC,QAJd;AAKE,oBAAW,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAHF,EAgBG,KAAKD,KAAL,CAAWqB,SAAX,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGC,uDACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEI,QAAtB;AAAgC,MAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,UAAD;AACE,MAAA,YAAY,MADd;AAEE,MAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWG,UAFzB;AAGE,MAAA,iBAAiB,EAAE,KAAKH,KAAL,CAAWI,WAHhC;AAIE,MAAA,eAAe,EAAE,KAAKb,KAAL,CAAW0B,UAAX,CAAsBE,MAJzC;AAKE,MAAA,kBAAkB,EAAE,CALtB;AAME,MAAA,QAAQ,EAAE,KAAKZ,gBAAL,CAAsBa,IAAtB,CAA2B,IAA3B,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAnBJ,CADF,CADF,CADF,CADF,CADF;AA2CD;;AAnFwC;;AAqF3C,MAAMC,eAAe,GAAIrB,KAAD,IAAW;AACjC,SAAO;AACLiB,IAAAA,UAAU,EAAEjB,KAAK,CAACsB,UAAN,CAAiBL,UADxB;AAELL,IAAAA,SAAS,EAAEZ,KAAK,CAACsB,UAAN,CAAiBV;AAFvB,GAAP;AAID,CALD;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlB,IAAAA,gBAAgB,EAAE,MAAMkB,QAAQ,CAACzC,mBAAmB,EAApB,CAD3B;AAELmB,IAAAA,mBAAmB,EAAGP,KAAD,IAAW6B,QAAQ,CAACxC,yBAAyB,CAACW,KAAD,CAA1B,CAFnC;AAGLM,IAAAA,OAAO,EAAE,MAAMuB,QAAQ,CAACvC,eAAe,EAAhB;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAeH,OAAO,CAACuC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClC,kBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCharectersAction,\r\n  getCharectersSearchAction,\r\n  isLoadingAction,\r\n} from \"../actions/getDataAction\";\r\nimport DisplayData from \"./DisplayData\";\r\nimport Spinner from \"./Spinner\";\r\n//import Pagination from \"./Pagination\";\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n// let ts = new Date().getTime();\r\n// let hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\r\n// let url = `?ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`\r\n\r\nclass CharecterComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n      activePage: 1,\r\n      dataPerPage: 12,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //   console.log(this.props);\r\n    this.props.Loading();\r\n    this.props.getAllCharecters();\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //this.props.getComicsSearch(this.state.query);\r\n    if(this.state.query)\r\n    this.props.Loading();\r\n    this.props.getCharectersSearch(this.state.query);\r\n  };\r\n  \r\n  handlePageChange(pageNumber) {\r\n    console.log(`active page is ${pageNumber}`);\r\n    this.setState({activePage: pageNumber});\r\n  }\r\n  render() {\r\n    console.log(this.props.isLoading);\r\n\r\n    let title = \"Marvel Charecters List\";\r\n    let indexLast = this.state.dataPerPage * this.state.activePage;\r\n    let indexFirst = indexLast - this.state.dataPerPage;\r\n     let pageChar = this.props.charecters.slice(indexFirst, indexLast);\r\n\r\n    return (\r\n      <>\r\n        <section id=\"header\" className=\" d-flex align-items-center\">\r\n          <div className=\"container-fluid nav_bg \">\r\n            <div className=\"row\">\r\n              <div className=\"col-10 mx-auto  marginPage\">\r\n                <h1>{title}</h1>\r\n\r\n                <form\r\n                  className=\"form-inline my-2 my-lg-0\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <input\r\n                    className=\"search-data \"\r\n                    type=\"search\"\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  {/* <button className=\"btn btn-outline-success my-2 my-sm-0\"  type=\"submit\">Search</button> */}\r\n                </form>\r\n                {this.props.isLoading ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <>\r\n                    <DisplayData allData={pageChar} reqParams=\"charecters\" />\r\n\r\n                    <Pagination\r\n                      hideDisabled\r\n                      activePage={this.state.activePage}\r\n                      itemsCountPerPage={this.state.dataPerPage}\r\n                      totalItemsCount={this.props.charecters.length}\r\n                      pageRangeDisplayed={5}\r\n                      onChange={this.handlePageChange.bind(this)}\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    charecters: state.marvelData.charecters,\r\n    isLoading: state.marvelData.isLoading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCharecters: () => dispatch(getCharectersAction()),\r\n    getCharectersSearch: (query) => dispatch(getCharectersSearchAction(query)),\r\n    Loading: () => dispatch(isLoadingAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharecterComponent);\r\n"]},"metadata":{},"sourceType":"module"}