{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\ComicPageComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from \"./Spinner\";\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\nimport { getComicByIdAction, isLoadingAction } from '../actions/getDataAction';\n\nclass ComicPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getComicById(params.id);\n    let user = this.props.currentUser;\n    console.log(user);\n    console.log(`is ${this.props.isLoggedIn}`); // if(this.props.favCharecters){\n    //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\n    //     {\n    //       console.log(\"hello indaia\");\n    //           this.setState({\n    //             isFavourite:true\n    //           });\n    //    }\n    // }   \n  }\n\n  render() {\n    let image, knowMorUrl;\n    let total_comics, comics;\n\n    if (!isEmpty(this.props.comic)) {\n      image = this.props.comic.thumbnail.path + \".\" + this.props.comic.thumbnail.extension; //   total_comics = this.props.charecter.comics.available;\n      //   comics = this.props.charecter.comics.items;\n\n      knowMorUrl = this.props.comic.urls; //  console.log(knowMorUrl);\n    }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\",\n      className: \"container-fluid show-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row set-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5 charecter-image \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      className: \"img-fluid page-image\",\n      alt: \"charecter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 charecter-detail \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }\n    }, this.props.comic.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, this.state.isFavourite ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleUnFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, \"UnFavourite\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, \"Favourite\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }\n    }, this.props.comic.description), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, this.props.comic.title, \" : Comics (\", total_comics, \")\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MarvelPageItemComponent, {\n      comics: comics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }\n    }))), knowMorUrl && /*#__PURE__*/React.createElement(\"a\", {\n      href: knowMorUrl[0].url,\n      className: \"btn btn-get-started\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, \"Know more\"))))))));\n  }\n\n}\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n    comic: state.marvelData.comic,\n    isLoading: state.marvelData.isLoading,\n    isLoggedIn: state.auth.isLoggedIn //   favCharecters:state.auth.favCharecters\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getComicById: id => dispatch(getComicByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction()) // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\n    //    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontEnd/src/components/ComicPageComponent.js"],"names":["React","Component","connect","Spinner","MarvelPageItemComponent","getComicByIdAction","isLoadingAction","ComicPageComponent","constructor","props","state","isFavourite","componentDidMount","match","params","Loading","getComicById","id","user","currentUser","console","log","isLoggedIn","render","image","knowMorUrl","total_comics","comics","isEmpty","comic","thumbnail","path","extension","urls","isLoading","name","handleUnFavourite","handleFavourite","description","title","url","obj","key","hasOwnProperty","mapStateToProps","auth","marvelData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from \"./Spinner\";\r\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\r\nimport { getComicByIdAction, isLoadingAction } from '../actions/getDataAction';\r\n\r\n\r\n class ComicPageComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isFavourite:false\r\n        }\r\n      }\r\n      componentDidMount (){\r\n        const { match: { params } } = this.props;\r\n        this.props.Loading();\r\n        this.props.getComicById(params.id);\r\n        let user =this.props.currentUser;\r\n        console.log(user);\r\n        console.log(`is ${this.props.isLoggedIn}`)\r\n      \r\n        // if(this.props.favCharecters){\r\n         \r\n        //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\r\n        //     {\r\n        //       console.log(\"hello indaia\");\r\n        //           this.setState({\r\n        //             isFavourite:true\r\n        //           });\r\n        //    }\r\n        // }   \r\n    }\r\n      \r\n    render() {\r\n        let image, knowMorUrl;\r\n    let total_comics, comics;\r\n    if (!isEmpty(this.props.comic)) {\r\n      image =\r\n        this.props.comic.thumbnail.path +\r\n        \".\" +\r\n        this.props.comic.thumbnail.extension;\r\n\r\n    //   total_comics = this.props.charecter.comics.available;\r\n    //   comics = this.props.charecter.comics.items;\r\n      knowMorUrl = this.props.comic.urls;\r\n\r\n      //  console.log(knowMorUrl);\r\n    }\r\n         return this.props.isLoading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <>\r\n              <div id=\"header\" className=\"container-fluid show-page\">\r\n                <div className=\"row set-row\">\r\n                  <div className=\"col-10 mx-auto\">\r\n                    <div className=\"row \">\r\n                      <div className=\"col-5 charecter-image \">\r\n                        <img\r\n                          src={image}\r\n                          className=\"img-fluid page-image\"\r\n                          alt=\"charecter\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-7 charecter-detail \">\r\n                        <div className=\"\">\r\n                          <h3>\r\n                            {this.props.comic.name}\r\n                            <span className=\"float-right\">\r\n                              {this.state.isFavourite ? (\r\n                                <button\r\n                                  className=\"btn  fav-btn\"\r\n                                  onClick={this.handleUnFavourite}\r\n                                >\r\n                                  UnFavourite\r\n                                </button>\r\n                              ) : (\r\n                                <button\r\n                                  className=\"btn  fav-btn\"\r\n                                  onClick={this.handleFavourite}\r\n                                >\r\n                                  Favourite\r\n                                </button>\r\n                              )}\r\n                            </span>\r\n                          </h3>\r\n                          <hr />\r\n                          <p>{this.props.comic.description}</p>\r\n                          <div>\r\n                            <h3>\r\n                              {this.props.comic.title} : Comics ({total_comics})\r\n                            </h3>\r\n                            <hr />\r\n                            <ul>\r\n                              <MarvelPageItemComponent comics={comics} />\r\n                            </ul>\r\n                          </div>\r\n                          {knowMorUrl && (\r\n                            <a\r\n                              href={knowMorUrl[0].url}\r\n                              className=\"btn btn-get-started\"\r\n                            >\r\n                              Know more\r\n                            </a>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) return false;\r\n    }\r\n    return true;\r\n  }\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n         currentUser :state.auth.currentUser,\r\n         comic : state.marvelData.comic,\r\n          isLoading :  state.marvelData.isLoading,\r\n          isLoggedIn: state.auth.isLoggedIn,\r\n        //   favCharecters:state.auth.favCharecters\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    getComicById : (id) => dispatch(getComicByIdAction(id)),\r\n    Loading : () => dispatch(isLoadingAction()),\r\n    // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\r\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\r\n//    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\r\n    \r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);"]},"metadata":{},"sourceType":"module"}