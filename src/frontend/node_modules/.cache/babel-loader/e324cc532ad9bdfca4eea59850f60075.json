{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontend\\\\src\\\\components\\\\CharcterPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { getCharecterByIdAction, isLoadingAction } from \"../actions/getDataAction\";\nimport { connect } from 'react-redux';\nimport Spinner from \"./Spinner\";\n\nclass CharcterPageComponent extends Component {\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getCharecterById(params.id);\n    console.log(this.props.charecter);\n    console.log(this.props.is);\n  }\n\n  render() {\n    console.log(this.props.charecter.thumbnail, path); //   let url;\n    //   if(!this.props.isLoading){\n    //     url =this.props.charecter.thumbnail.path + '.' +  this.props.charecter.thumbnail.extension;\n    //   }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 charecterPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }\n    }, this.props.charecter.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }\n    }, this.props.charecter.id)))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    charecter: state.marvelData.charecter,\n    isLoading: state.marvelData.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCharecterById: id => dispatch(getCharecterByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharcterPageComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontend/src/components/CharcterPageComponent.js"],"names":["React","Component","getCharecterByIdAction","isLoadingAction","connect","Spinner","CharcterPageComponent","componentDidMount","match","params","props","Loading","getCharecterById","id","console","log","charecter","is","render","thumbnail","path","isLoading","name","mapStateToProps","state","marvelData","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,sBAAT,EAAiCC,eAAjC,QAAwD,0BAAxD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,qBAAN,SAAoCL,SAApC,CAA8C;AAE1CM,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAAT,QAAwB,KAAKC,KAAnC;AACA,SAAKA,KAAL,CAAWC,OAAX;AACA,SAAKD,KAAL,CAAWE,gBAAX,CAA4BH,MAAM,CAACI,EAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,SAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWO,EAAvB;AAEH;;AAEHC,EAAAA,MAAM,GAAG;AAELJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,SAAX,CAAqBG,SAAjC,EAA2CC,IAA3C,EAFK,CAGP;AACA;AACA;AACA;;AACA,WACE,KAAKV,KAAL,CAAWW,SAAX,gBAAuB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,gBAAwC,uDACtC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWM,SAAX,CAAqBM,IAA1B,CADH,CADJ,eAKI;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKZ,KAAL,CAAWM,SAAX,CAAqBH,EAA1B,CADH,CALJ,CADA,CADF,CADF,CADsC,CAD1C;AAoBD;;AAtC2C;;AAyC9C,MAAMU,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAO;AACFR,IAAAA,SAAS,EAAGQ,KAAK,CAACC,UAAN,CAAiBT,SAD3B;AAEDK,IAAAA,SAAS,EAAIG,KAAK,CAACC,UAAN,CAAiBJ;AAF7B,GAAP;AAIH,CALD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAAa;AACtC,SAAM;AACJf,IAAAA,gBAAgB,EAAIC,EAAD,IAAQc,QAAQ,CAACzB,sBAAsB,CAACW,EAAD,CAAvB,CAD/B;AAEJF,IAAAA,OAAO,EAAG,MAAMgB,QAAQ,CAACxB,eAAe,EAAhB;AAFpB,GAAN;AAID,CALD;;AAMA,eAAeC,OAAO,CAACmB,eAAD,EAAmBG,kBAAnB,CAAP,CAA8CpB,qBAA9C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCharecterByIdAction, isLoadingAction } from \"../actions/getDataAction\";\r\nimport {connect} from 'react-redux'\r\nimport Spinner from \"./Spinner\";\r\n\r\n\r\nclass CharcterPageComponent extends Component {\r\n\r\n    componentDidMount (){\r\n        const { match: { params } } = this.props;\r\n        this.props.Loading();\r\n        this.props.getCharecterById(params.id);\r\n        console.log(this.props.charecter);\r\n        console.log(this.props.is)\r\n      \r\n    }\r\n    \r\n  render() {\r\n      \r\n      console.log(this.props.charecter.thumbnail,path);\r\n    //   let url;\r\n    //   if(!this.props.isLoading){\r\n    //     url =this.props.charecter.thumbnail.path + '.' +  this.props.charecter.thumbnail.extension;\r\n    //   }\r\n    return (\r\n      this.props.isLoading? (<Spinner />) : ( <>\r\n        <div className=\"container-fluid \">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto\">\r\n            <div className=\"row \">\r\n                <div className =\"col-6 charecterPage\">\r\n                   <h1>{this.props.charecter.name}</h1> \r\n                   {/* <img src={this.props.charecter.thumbnail.path + '.' +  this.props.charecter.thumbnail.extension} className=\"img-fluid\" /> */}\r\n                </div>\r\n                <div className =\"col-6\">\r\n                   <h1>{this.props.charecter.id}</h1> \r\n                </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>)\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n         charecter : state.marvelData.charecter,\r\n          isLoading :  state.marvelData.isLoading\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    getCharecterById : (id) => dispatch(getCharecterByIdAction(id)),\r\n    Loading : () => dispatch(isLoadingAction())\r\n  }\r\n}\r\nexport default connect(mapStateToProps , mapDispatchToProps)(CharcterPageComponent);\r\n"]},"metadata":{},"sourceType":"module"}