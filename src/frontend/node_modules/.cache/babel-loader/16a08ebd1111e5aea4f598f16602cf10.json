{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\ComicPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./Spinner\";\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\nimport { getComicByIdAction, isLoadingAction } from \"../actions/getDataAction\";\n\nclass ComicPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getComicById(params.id);\n    let user = this.props.currentUser;\n    console.log(user);\n    console.log(`is ${this.props.isLoggedIn}`); // if(this.props.favCharecters){\n    //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\n    //     {\n    //       console.log(\"hello indaia\");\n    //           this.setState({\n    //             isFavourite:true\n    //           });\n    //    }\n    // }\n  }\n\n  render() {\n    let image, knowMorUrl;\n    let total_creators, creators, writer, penciler, publish, price;\n\n    if (!isEmpty(this.props.comic)) {\n      image = this.props.comic.thumbnail.path + \".\" + this.props.comic.thumbnail.extension;\n      total_creators = this.props.comic.creators.available;\n      creators = this.props.comic.creators.items;\n      creators.map(item => item.role).filter((value, index, self) => self.indexOf(value) === index);\n      knowMorUrl = this.props.comic.urls; // writer = creators.find((creator) => creator.role ===\"writer\");\n      // penciler = creators.find(\n      //   (creator) =>\n      //     (creator.role === \"penciller\" ||\n      //     creator.role === \"inker\" ||\n      //     creator.role ===\"penciller (cover)\")\n      // );\n\n      if (creators.length > 0) creators = undefined;\n      price = this.props.comic.prices[0].price;\n      publish = this.props.comic.dates[0].date.substring(0, 10);\n      console.log(publish); //  console.log(knowMorUrl);\n    }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\",\n      className: \"container-fluid show-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row set-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5 charecter-image \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      className: \"img-fluid page-image\",\n      alt: \"charecter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 charecter-detail \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, this.props.comic.title, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    }, this.state.isFavourite ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleUnFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }\n    }, \"UnFavourite\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }\n    }, \"Favourite\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, this.props.comic.description), creators && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 40\n      }\n    }, \" Creators\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, creators && creators.map(creator => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      key: creator.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 62\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \" \", creator.role, \":  \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, creator.name)))), publish && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \" Published on: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, publish), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    })), price && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \" Price: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, \"$\", price), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }), knowMorUrl && /*#__PURE__*/React.createElement(\"a\", {\n      href: knowMorUrl[0].url,\n      className: \"btn btn-get-started\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    }, \"Know more\"))))))));\n  }\n\n}\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n    comic: state.marvelData.comic,\n    isLoading: state.marvelData.isLoading,\n    isLoggedIn: state.auth.isLoggedIn //   favCharecters:state.auth.favCharecters\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getComicById: id => dispatch(getComicByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction()) // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\n    //    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontEnd/src/components/ComicPageComponent.js"],"names":["React","Component","connect","Spinner","MarvelPageItemComponent","getComicByIdAction","isLoadingAction","ComicPageComponent","constructor","props","state","isFavourite","componentDidMount","match","params","Loading","getComicById","id","user","currentUser","console","log","isLoggedIn","render","image","knowMorUrl","total_creators","creators","writer","penciler","publish","price","isEmpty","comic","thumbnail","path","extension","available","items","map","item","role","filter","value","index","self","indexOf","urls","length","undefined","prices","dates","date","substring","isLoading","title","handleUnFavourite","handleFavourite","description","creator","name","url","obj","key","hasOwnProperty","mapStateToProps","auth","marvelData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"./Spinner\";\r\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\r\nimport { getComicByIdAction, isLoadingAction } from \"../actions/getDataAction\";\r\n\r\nclass ComicPageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFavourite: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    this.props.Loading();\r\n    this.props.getComicById(params.id);\r\n    let user = this.props.currentUser;\r\n    console.log(user);\r\n    console.log(`is ${this.props.isLoggedIn}`);\r\n\r\n    // if(this.props.favCharecters){\r\n\r\n    //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\r\n    //     {\r\n    //       console.log(\"hello indaia\");\r\n    //           this.setState({\r\n    //             isFavourite:true\r\n    //           });\r\n    //    }\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    let image, knowMorUrl;\r\n    let total_creators, creators, writer, penciler, publish,price;\r\n    if (!isEmpty(this.props.comic)) {\r\n      image =\r\n        this.props.comic.thumbnail.path +\r\n        \".\" +\r\n        this.props.comic.thumbnail.extension;\r\n\r\n\r\n       \r\n\r\n\r\n      total_creators = this.props.comic.creators.available;\r\n      creators = this.props.comic.creators.items;\r\n      creators.map(item => item.role)\r\n      .filter((value, index, self) => self.indexOf(value) === index)\r\n\r\n      knowMorUrl = this.props.comic.urls;\r\n      // writer = creators.find((creator) => creator.role ===\"writer\");\r\n      // penciler = creators.find(\r\n      //   (creator) =>\r\n      //     (creator.role === \"penciller\" ||\r\n      //     creator.role === \"inker\" ||\r\n      //     creator.role ===\"penciller (cover)\")\r\n      // );\r\n      if(creators.length > 0)\r\n      creators = undefined;\r\n      price = this.props.comic.prices[0].price;\r\n      publish = this.props.comic.dates[0].date.substring(0, 10);\r\n      console.log(publish);\r\n      \r\n      //  console.log(knowMorUrl);\r\n    }\r\n    return this.props.isLoading ? (\r\n      <Spinner />\r\n    ) : (\r\n      <>\r\n        <div id=\"header\" className=\"container-fluid show-page\">\r\n          <div className=\"row set-row\">\r\n            <div className=\"col-10 mx-auto\">\r\n              <div className=\"row \">\r\n                <div className=\"col-5 charecter-image \">\r\n                  <img\r\n                    src={image}\r\n                    className=\"img-fluid page-image\"\r\n                    alt=\"charecter\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-7 charecter-detail \">\r\n                  <div className=\"\">\r\n                    <h3>\r\n                      {this.props.comic.title}\r\n                      <span className=\"float-right\">\r\n                        {this.state.isFavourite ? (\r\n                          <button\r\n                            className=\"btn  fav-btn\"\r\n                            onClick={this.handleUnFavourite}\r\n                          >\r\n                            UnFavourite\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn  fav-btn\"\r\n                            onClick={this.handleFavourite}\r\n                          >\r\n                            Favourite\r\n                          </button>\r\n                        )}\r\n                      </span>\r\n                    </h3>\r\n                    <hr />\r\n                    <p>{this.props.comic.description}</p>\r\n                    \r\n                    { creators &&  ( <><h3> Creators</h3> \r\n                      <hr />\r\n                      \r\n                      </>)}\r\n                    <div className=\"row\">\r\n                     \r\n\r\n                        { creators && creators.map(creator=> <div className=\"col-6\" key={creator.name}>\r\n                        <h3> {creator.role}:  </h3>\r\n                            <p>{creator.name}</p>\r\n                        </div>\r\n                        )\r\n\r\n                        }\r\n                   \r\n                      </div>\r\n                     \r\n                        {publish && (\r\n                          <>\r\n                            <h3> Published on: </h3>\r\n                            <p>{publish}</p>\r\n                            <hr />\r\n                          </>\r\n                        )}\r\n                      \r\n                      \r\n                        {price && (\r\n                          <>\r\n                            <h3> Price: </h3>\r\n                            <p>${price}</p>\r\n                            <hr />\r\n                          </>\r\n                        )}\r\n                    \r\n\r\n                      {/* <ul>\r\n                              <MarvelPageItemComponent comics={comics} />\r\n                            </ul> */}\r\n                    \r\n                    <hr />\r\n                    {knowMorUrl && (\r\n                      <a\r\n                        href={knowMorUrl[0].url}\r\n                        className=\"btn btn-get-started\"\r\n                      >\r\n                        Know more\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.auth.currentUser,\r\n    comic: state.marvelData.comic,\r\n    isLoading: state.marvelData.isLoading,\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    //   favCharecters:state.auth.favCharecters\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getComicById: (id) => dispatch(getComicByIdAction(id)),\r\n    Loading: () => dispatch(isLoadingAction()),\r\n    // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\r\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\r\n    //    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);\r\n"]},"metadata":{},"sourceType":"module"}