{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\ComicPageComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from \"./Spinner\";\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\nimport { getComicByIdAction, isLoadingAction } from '../actions/getDataAction';\n\nclass ComicPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getComicById(params.id);\n    let user = this.props.currentUser;\n    console.log(user);\n    console.log(`is ${this.props.isLoggedIn}`); // if(this.props.favCharecters){\n    //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\n    //     {\n    //       console.log(\"hello indaia\");\n    //           this.setState({\n    //             isFavourite:true\n    //           });\n    //    }\n    // }   \n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"comic Page\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.props.comic.title));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n    comic: state.marvelData.charecter,\n    isLoading: state.marvelData.isLoading,\n    isLoggedIn: state.auth.isLoggedIn //   favCharecters:state.auth.favCharecters\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getComicById: id => dispatch(getComicByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction()) // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\n    //    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontEnd/src/components/ComicPageComponent.js"],"names":["React","Component","connect","Spinner","MarvelPageItemComponent","getComicByIdAction","isLoadingAction","ComicPageComponent","constructor","props","state","isFavourite","componentDidMount","match","params","Loading","getComicById","id","user","currentUser","console","log","isLoggedIn","render","comic","title","mapStateToProps","auth","marvelData","charecter","isLoading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,0BAApD;;AAGC,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAC;AADD,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAAT,QAAwB,KAAKL,KAAnC;AACA,SAAKA,KAAL,CAAWM,OAAX;AACA,SAAKN,KAAL,CAAWO,YAAX,CAAwBF,MAAM,CAACG,EAA/B;AACA,QAAIC,IAAI,GAAE,KAAKT,KAAL,CAAWU,WAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAa,MAAK,KAAKZ,KAAL,CAAWa,UAAW,EAAxC,EANkB,CAQlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,KAArB,CAFJ,CADJ;AAMH;;AAnCuC;;AAqC5C,MAAMC,eAAe,GAAIhB,KAAD,IAAU;AAC9B,SAAO;AACFS,IAAAA,WAAW,EAAET,KAAK,CAACiB,IAAN,CAAWR,WADtB;AAEFK,IAAAA,KAAK,EAAGd,KAAK,CAACkB,UAAN,CAAiBC,SAFvB;AAGDC,IAAAA,SAAS,EAAIpB,KAAK,CAACkB,UAAN,CAAiBE,SAH7B;AAIDR,IAAAA,UAAU,EAAEZ,KAAK,CAACiB,IAAN,CAAWL,UAJtB,CAKH;;AALG,GAAP;AAOH,CARD;;AASA,MAAMS,kBAAkB,GAAIC,QAAD,IAAa;AACtC,SAAM;AACJhB,IAAAA,YAAY,EAAIC,EAAD,IAAQe,QAAQ,CAAC3B,kBAAkB,CAACY,EAAD,CAAnB,CAD3B;AAEJF,IAAAA,OAAO,EAAG,MAAMiB,QAAQ,CAAC1B,eAAe,EAAhB,CAFpB,CAGJ;AACA;AACJ;;AALQ,GAAN;AAQD,CATD;;AAUA,eAAeJ,OAAO,CAACwB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CxB,kBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from \"./Spinner\";\r\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\r\nimport { getComicByIdAction, isLoadingAction } from '../actions/getDataAction';\r\n\r\n\r\n class ComicPageComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isFavourite:false\r\n        }\r\n      }\r\n      componentDidMount (){\r\n        const { match: { params } } = this.props;\r\n        this.props.Loading();\r\n        this.props.getComicById(params.id);\r\n        let user =this.props.currentUser;\r\n        console.log(user);\r\n        console.log(`is ${this.props.isLoggedIn}`)\r\n      \r\n        // if(this.props.favCharecters){\r\n         \r\n        //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\r\n        //     {\r\n        //       console.log(\"hello indaia\");\r\n        //           this.setState({\r\n        //             isFavourite:true\r\n        //           });\r\n        //    }\r\n        // }   \r\n    }\r\n      \r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <h1>comic Page</h1>\r\n                <p>{this.props.comic.title}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n         currentUser :state.auth.currentUser,\r\n         comic : state.marvelData.charecter,\r\n          isLoading :  state.marvelData.isLoading,\r\n          isLoggedIn: state.auth.isLoggedIn,\r\n        //   favCharecters:state.auth.favCharecters\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    getComicById : (id) => dispatch(getComicByIdAction(id)),\r\n    Loading : () => dispatch(isLoadingAction()),\r\n    // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\r\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\r\n//    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\r\n    \r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);"]},"metadata":{},"sourceType":"module"}