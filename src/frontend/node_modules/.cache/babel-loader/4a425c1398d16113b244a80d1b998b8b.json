{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontend\\\\src\\\\components\\\\CharcterPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { getCharecterByIdAction, isLoadingAction } from \"../actions/getDataAction\";\nimport { connect } from 'react-redux';\nimport Spinner from \"./Spinner\";\nimport MarvelPageItemComponent from \"./marvelPageItemComponent\";\n\nclass CharcterPageComponent extends Component {\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getCharecterById(params.id); //   console.log(this.props.charecter);     \n  }\n\n  handleFavourite() {\n    let token = localStorage.getItem('token');\n\n    if (!token) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    let image, knowMorUrl;\n    let total_comics, comics;\n\n    if (!isEmpty(this.props.charecter)) {\n      image = this.props.charecter.thumbnail.path + '.' + this.props.charecter.thumbnail.extension;\n      total_comics = this.props.charecter.comics.available;\n      comics = this.props.charecter.comics.items;\n      knowMorUrl = this.props.charecter.urls;\n      console.log(knowMorUrl);\n    }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\",\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 charecterPage \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      className: \"img-fluid page-image\",\n      alt: \"cahrecter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, this.props.charecter.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 48\n      }\n    }, \"Favourite\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, this.props.charecter.description), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }\n    }, this.props.charecter.name, \" : comics\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(MarvelPageItemComponent, {\n      comics: comics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    }))), knowMorUrl && /*#__PURE__*/React.createElement(\"a\", {\n      href: knowMorUrl[0].url,\n      className: \"btn btn-get-started\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }\n    }, \"Know more\")))))));\n  }\n\n}\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n\nconst mapStateToProps = state => {\n  return {\n    charecter: state.marvelData.charecter,\n    isLoading: state.marvelData.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCharecterById: id => dispatch(getCharecterByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharcterPageComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontend/src/components/CharcterPageComponent.js"],"names":["React","Component","getCharecterByIdAction","isLoadingAction","connect","Spinner","MarvelPageItemComponent","CharcterPageComponent","componentDidMount","match","params","props","Loading","getCharecterById","id","handleFavourite","token","localStorage","getItem","history","push","render","image","knowMorUrl","total_comics","comics","isEmpty","charecter","thumbnail","path","extension","available","items","urls","console","log","isLoading","name","description","url","obj","key","hasOwnProperty","mapStateToProps","state","marvelData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCharecterByIdAction, isLoadingAction } from \"../actions/getDataAction\";\r\nimport {connect} from 'react-redux'\r\nimport Spinner from \"./Spinner\";\r\nimport MarvelPageItemComponent from \"./marvelPageItemComponent\";\r\n\r\n\r\nclass CharcterPageComponent extends Component {\r\n\r\n    componentDidMount (){\r\n        const { match: { params } } = this.props;\r\n        this.props.Loading();\r\n        this.props.getCharecterById(params.id);\r\n     //   console.log(this.props.charecter);     \r\n    }\r\n    handleFavourite(){\r\n      let token = localStorage.getItem('token');\r\n      if(!token)\r\n      {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    \r\n  render() {\r\n    let image,knowMorUrl;\r\n    let total_comics,comics;\r\n      if(!isEmpty(this.props.charecter)){\r\n    \r\n        image=this.props.charecter.thumbnail.path + '.' +  this.props.charecter.thumbnail.extension;\r\n\r\n        total_comics = this.props.charecter.comics.available;\r\n        comics = this.props.charecter.comics.items;\r\n        knowMorUrl=this.props.charecter.urls;\r\n\r\n        console.log(knowMorUrl);\r\n      }\r\n    return (\r\n      this.props.isLoading? (<Spinner />) : ( <>\r\n        <div id=\"header\" className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto\">\r\n            <div className=\"row \">\r\n                <div className =\"col-6 charecterPage \">\r\n                  \r\n                   <img src={image} className=\"img-fluid page-image\" alt=\"cahrecter\" />\r\n                </div>\r\n                <div className =\"col-6\">\r\n                <h3>{this.props.charecter.name}\r\n                <span className=\"float-right\"> <button className=\"btn btn-primary\" onClick={this.handleFavourite} >Favourite</button></span>\r\n                </h3>\r\n                <hr/>\r\n                <p>{this.props.charecter.description}</p> \r\n                 <div>\r\n                   <h3>{this.props.charecter.name} : comics</h3>\r\n                   <hr/>\r\n                   <ul>                \r\n                      <MarvelPageItemComponent comics = {comics}/>\r\n                   </ul>      \r\n                 </div>\r\n                 {\r\n                   knowMorUrl &&  <a href={knowMorUrl[0].url} className=\"btn btn-get-started\">Know more</a>\r\n                 }\r\n                \r\n                </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>)\r\n\r\n    );\r\n  }\r\n}\r\nfunction isEmpty(obj) {\r\n  for(var key in obj) {\r\n      if(obj.hasOwnProperty(key))\r\n          return false;\r\n  }\r\n  return true;\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n         charecter : state.marvelData.charecter,\r\n          isLoading :  state.marvelData.isLoading\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    getCharecterById : (id) => dispatch(getCharecterByIdAction(id)),\r\n    Loading : () => dispatch(isLoadingAction())\r\n  }\r\n}\r\nexport default connect(mapStateToProps , mapDispatchToProps)(CharcterPageComponent);\r\n"]},"metadata":{},"sourceType":"module"}