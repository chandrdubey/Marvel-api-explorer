{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\ComicPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./Spinner\";\nimport { getComicByIdAction, isLoadingAction } from \"../actions/getDataAction\";\n\nclass ComicPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getComicById(params.id);\n    let user = this.props.currentUser;\n    console.log(user);\n    console.log(`is ${this.props.isLoggedIn}`); // if(this.props.favCharecters){\n    //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\n    //     {\n    //       console.log(\"hello indaia\");\n    //           this.setState({\n    //             isFavourite:true\n    //           });\n    //    }\n    // }\n  }\n\n  render() {\n    let image, knowMorUrl;\n    let publish, price;\n\n    if (!isEmpty(this.props.comic)) {\n      image = this.props.comic.thumbnail.path + \".\" + this.props.comic.thumbnail.extension;\n      creators = unique(this.props.comic.creators.items);\n      console.log(creators);\n      knowMorUrl = this.props.comic.urls;\n      if (creators.length === 0) creators = undefined;\n      price = this.props.comic.prices[0].price;\n      publish = this.props.comic.dates[0].date.substring(0, 10);\n      console.log(publish); //  console.log(knowMorUrl);\n    }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\",\n      className: \"container-fluid show-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row set-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5 charecter-image \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      className: \"img-fluid page-image\",\n      alt: \"charecter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 charecter-detail \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, this.props.comic.title, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, this.state.isFavourite ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleUnFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"UnFavourite\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Favourite\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, this.props.comic.description), this.props.comic.series && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, \" Series\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, this.props.comic.series.name)), creators && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, \" Creators\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, creators && creators.map(creator => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      key: creator.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }\n    }, \" \", creator.role, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }\n    }, creator.name)))), publish && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }, \" Published on \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }, publish)), price && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }\n    }, \" Price \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, \"$\", price)), knowMorUrl && /*#__PURE__*/React.createElement(\"a\", {\n      href: knowMorUrl[0].url,\n      className: \"btn btn-get-started\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Know more\")))))));\n  }\n\n}\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n\nfunction unique(arr) {\n  let distinct = [];\n  arr.forEach(x => {\n    if (!distinct.some(creator => creator.role === x.role)) {\n      distinct.push(x);\n    }\n  });\n  return distinct;\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n    comic: state.marvelData.comic,\n    isLoading: state.marvelData.isLoading,\n    isLoggedIn: state.auth.isLoggedIn //   favCharecters:state.auth.favCharecters\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getComicById: id => dispatch(getComicByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction()) // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\n    //    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontEnd/src/components/ComicPageComponent.js"],"names":["React","Component","connect","Spinner","getComicByIdAction","isLoadingAction","ComicPageComponent","constructor","props","state","isFavourite","componentDidMount","match","params","Loading","getComicById","id","user","currentUser","console","log","isLoggedIn","render","image","knowMorUrl","publish","price","isEmpty","comic","thumbnail","path","extension","creators","unique","items","urls","length","undefined","prices","dates","date","substring","isLoading","title","handleUnFavourite","handleFavourite","description","series","name","map","creator","role","url","obj","key","hasOwnProperty","arr","distinct","forEach","x","some","push","mapStateToProps","auth","marvelData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport { getComicByIdAction, isLoadingAction } from \"../actions/getDataAction\";\r\n\r\nclass ComicPageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFavourite: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    this.props.Loading();\r\n    this.props.getComicById(params.id);\r\n    let user = this.props.currentUser;\r\n    console.log(user);\r\n    console.log(`is ${this.props.isLoggedIn}`);\r\n\r\n    // if(this.props.favCharecters){\r\n\r\n    //    if(this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel=>charecterMarvel.charecter_id === params.id))\r\n    //     {\r\n    //       console.log(\"hello indaia\");\r\n    //           this.setState({\r\n    //             isFavourite:true\r\n    //           });\r\n    //    }\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    let image, knowMorUrl;\r\n    let  publish, price;\r\n    if (!isEmpty(this.props.comic)) {\r\n      image =\r\n        this.props.comic.thumbnail.path +\r\n        \".\" +\r\n        this.props.comic.thumbnail.extension;\r\n\r\n      creators = unique(this.props.comic.creators.items);\r\n      console.log(creators);\r\n      knowMorUrl = this.props.comic.urls;\r\n      if (creators.length === 0) creators = undefined;\r\n      price = this.props.comic.prices[0].price;\r\n      publish = this.props.comic.dates[0].date.substring(0, 10);\r\n      console.log(publish);\r\n\r\n      //  console.log(knowMorUrl);\r\n    }\r\n    return this.props.isLoading ? (\r\n      <Spinner />\r\n    ) : (\r\n      <>\r\n        <div id=\"header\" className=\"container-fluid show-page\">\r\n          <div className=\"row set-row\">\r\n            <div className=\"col-10 mx-auto\">\r\n              <div className=\"row \">\r\n                <div className=\"col-5 charecter-image \">\r\n                  <img\r\n                    src={image}\r\n                    className=\"img-fluid page-image\"\r\n                    alt=\"charecter\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-7 charecter-detail \">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-10\">\r\n                      <h3>{this.props.comic.title} </h3>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      {this.state.isFavourite ? (\r\n                        <button\r\n                          className=\"btn  fav-btn\"\r\n                          onClick={this.handleUnFavourite}\r\n                        >\r\n                          UnFavourite\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"btn  fav-btn\"\r\n                          onClick={this.handleFavourite}\r\n                        >\r\n                          Favourite\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <hr/>\r\n                  <p>{this.props.comic.description}</p>\r\n                  {this.props.comic.series && (\r\n                    <>\r\n                      <h3> Series</h3>\r\n                      <hr />\r\n                      <p>{this.props.comic.series.name}</p>\r\n                    </>\r\n                  )}\r\n\r\n                  {creators && (\r\n                    <>\r\n                      <h3> Creators</h3>\r\n                      <hr />\r\n                    </>\r\n                  )}\r\n                  <div className=\"row\">\r\n                    {creators &&\r\n                      creators.map((creator) => (\r\n                        <div className=\"col-6\" key={creator.name}>\r\n                          <h4> {creator.role} </h4>\r\n                          <p>{creator.name}</p>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n\r\n                  {publish && (\r\n                    <>\r\n                      <h3> Published on </h3>\r\n                      <hr />\r\n                      <p>{publish}</p>\r\n                    </>\r\n                  )}\r\n\r\n                  {price && (\r\n                    <>\r\n                      <h3> Price </h3>\r\n                      <hr />\r\n                      <p>${price}</p>\r\n                    </>\r\n                  )}\r\n                \r\n                  {knowMorUrl && (\r\n                    <a href={knowMorUrl[0].url} className=\"btn btn-get-started\">\r\n                      Know more\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\nfunction unique(arr) {\r\n  let distinct = [];\r\n\r\n  arr.forEach((x) => {\r\n    if (!distinct.some((creator) => creator.role === x.role)) {\r\n      distinct.push(x);\r\n    }\r\n  });\r\n  return distinct;\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.auth.currentUser,\r\n    comic: state.marvelData.comic,\r\n    isLoading: state.marvelData.isLoading,\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    //   favCharecters:state.auth.favCharecters\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getComicById: (id) => dispatch(getComicByIdAction(id)),\r\n    Loading: () => dispatch(isLoadingAction()),\r\n    // addCharecterFav : (userId,data)=> dispatch(addCharecterToFavAction(userId,data)),\r\n    // removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\r\n    //    getFavCharecters : (userId) => dispatch(getFavCharectersAction(userId))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPageComponent);\r\n"]},"metadata":{},"sourceType":"module"}