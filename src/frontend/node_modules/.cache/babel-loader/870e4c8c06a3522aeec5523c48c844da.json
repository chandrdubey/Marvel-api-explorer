{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\react.js\\\\learning react\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\ComicsComponent.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getComicsAction, getComicsSearchAction, isLoadingAction } from \"../actions/getDataAction\";\nimport DisplayData from \"./DisplayData\";\nimport Spinner from \"./Spinner\";\nimport Pagination from \"react-js-pagination\";\n\nclass ComicsComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // this.setState({\n      //   activePage : 1\n      // });\n\n      this.props.loading();\n      this.props.getComicsSearch(this.state.query);\n    };\n\n    this.state = {\n      query: \"\",\n      activePage: 1,\n      dataPerPage: 12\n    };\n  }\n\n  componentDidMount() {\n    this.props.getComics(); //    console.log(this.props.comics);\n\n    this.props.loading();\n  }\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n    this.setState({\n      activePage: pageNumber\n    });\n  }\n\n  render() {\n    window.scrollTo(0, 0);\n    const title = \"Marvel Comics List\";\n    let indexLast = this.state.dataPerPage * this.state.activePage;\n    let indexFirst = indexLast - this.state.dataPerPage;\n    let pageComic = this.props.comics.slice(indexFirst, indexLast);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"header\",\n      className: \" d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid nav_bg \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto  marginPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline my-2 ml-2\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-data\",\n      type: \"search\",\n      onChange: this.handleChange,\n      placeholder: \"Search\",\n      \"aria-label\": \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    })), this.props.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }) : this.props.comics.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DisplayData, {\n      allData: pageComic,\n      reqParams: \"comics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      hideDisabled: true,\n      activePage: this.state.activePage,\n      itemsCountPerPage: this.state.dataPerPage,\n      totalItemsCount: this.props.comics.length,\n      pageRangeDisplayed: 5,\n      onChange: this.handlePageChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"No result found\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comics: state.marvelData.comics,\n    isLoading: state.marvelData.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getComics: () => dispatch(getComicsAction()),\n    getComicsSearch: query => dispatch(getComicsSearchAction(query)),\n    loading: () => dispatch(isLoadingAction())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicsComponent);","map":{"version":3,"sources":["D:/web d/react.js/learning react/marvel-superstars/src/frontEnd/src/components/ComicsComponent.js"],"names":["React","Component","connect","getComicsAction","getComicsSearchAction","isLoadingAction","DisplayData","Spinner","Pagination","ComicsComponent","constructor","props","handleChange","e","setState","query","target","value","handleSubmit","preventDefault","loading","getComicsSearch","state","activePage","dataPerPage","componentDidMount","getComics","handlePageChange","pageNumber","console","log","render","window","scrollTo","title","indexLast","indexFirst","pageComic","comics","slice","isLoading","length","bind","mapStateToProps","marvelData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getComicsAction,\r\n  getComicsSearchAction,\r\n  isLoadingAction,\r\n} from \"../actions/getDataAction\";\r\nimport DisplayData from \"./DisplayData\";\r\nimport Spinner from \"./Spinner\";\r\nimport Pagination from \"react-js-pagination\";\r\nclass ComicsComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n      activePage: 1,\r\n      dataPerPage: 12\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getComics();\r\n    //    console.log(this.props.comics);\r\n    this.props.loading();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // this.setState({\r\n    //   activePage : 1\r\n    // });\r\n    this.props.loading();\r\n    this.props.getComicsSearch(this.state.query);\r\n  };\r\n  handlePageChange(pageNumber) {\r\n    console.log(`active page is ${pageNumber}`);\r\n    this.setState({activePage: pageNumber});\r\n  }\r\n  render() {\r\n    window.scrollTo(0, 0);\r\n    const title = \"Marvel Comics List\";\r\n    let indexLast = this.state.dataPerPage * this.state.activePage;\r\n    let indexFirst = indexLast - this.state.dataPerPage;\r\n     let pageComic = this.props.comics.slice(indexFirst, indexLast);\r\n    return (\r\n      <>\r\n        <section id=\"header\" className=\" d-flex align-items-center\">\r\n          <div className=\"container-fluid nav_bg \">\r\n            <div className=\"row\">\r\n              <div className=\"col-10 mx-auto  marginPage\">\r\n                <h1>{title}</h1>\r\n                <form\r\n                  className=\"form-inline my-2 ml-2\"\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  <input\r\n                    className=\"search-data\"\r\n                    type=\"search\"\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  {/* <button className=\"btn btn-outline-success my-2 my-sm-0\"  type=\"submit\">Search</button> */}\r\n                </form>\r\n                {this.props.isLoading ? (\r\n                  <Spinner />\r\n                ) : this.props.comics.length>0 ? (\r\n                  <>\r\n                  <DisplayData allData={pageComic} reqParams=\"comics\" />\r\n                  <Pagination\r\n                      hideDisabled\r\n                      activePage={this.state.activePage}\r\n                      itemsCountPerPage={this.state.dataPerPage}\r\n                      totalItemsCount={this.props.comics.length}\r\n                      pageRangeDisplayed={5}\r\n                      onChange={this.handlePageChange.bind(this)}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <h1 className=\"text-center\">No result found</h1>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comics: state.marvelData.comics,\r\n    isLoading: state.marvelData.isLoading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getComics: () => dispatch(getComicsAction()),\r\n    getComicsSearch: (query) => dispatch(getComicsSearchAction(query)),\r\n    loading: () => dispatch(isLoadingAction()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicsComponent);\r\n"]},"metadata":{},"sourceType":"module"}