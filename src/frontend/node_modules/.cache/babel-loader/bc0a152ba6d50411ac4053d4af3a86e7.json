{"ast":null,"code":"import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nlet ts = new Date().getTime();\nlet hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\nlet url = `ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`;\nexport const getCharectersAction = () => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/characters?limit=100&${url}`).then(response => {\n      dispatch({\n        type: 'ALL_CHARECTERS',\n        payload: response.data.data.results\n      }); // handle success\n\n      console.log(response.data.data.results);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const getComicsAction = () => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/comics?orderBy=title&limit=100&${url}`).then(response => {\n      dispatch({\n        type: 'ALL_COMICS',\n        payload: response.data.data.results\n      }); // handle success\n\n      console.log(response.data.data.results);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const getComicsSearchAction = query => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/comics?titleStartsWith=${query}&limit=100&${url}`).then(response => {\n      dispatch({\n        type: 'SEARCH_COMICS',\n        payload: response.data.data.results\n      }); // handle success\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const getCharectersSearchAction = query => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=${query}&${url}`).then(response => {\n      dispatch({\n        type: 'SEARCH_CHARECTERS',\n        payload: response.data.data.results\n      }); // handle success\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n};\nexport const isLoadingAction = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING'\n    });\n  };\n}; // Getting  charecter information from the marvel-api  by using this action\n\nexport const getCharecterByIdAction = id => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/characters/${id}?${url}`).then(response => {\n      console.log(response.data.data.results[0]);\n      dispatch({\n        type: 'ONE_CHARECTER',\n        payload: response.data.data.results[0]\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; // Getting favourite charecters of user by this action\n\nexport const getComicByIdAction = id => {\n  return dispatch => {\n    axios.get(`https://gateway.marvel.com:443/v1/public/comics/${id}?${url}`).then(response => {\n      console.log(response.data.data.results[0]);\n      dispatch({\n        type: 'ONE_COMIC',\n        payload: response.data.data.results[0]\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //Adding charecter to the favorite list of charcters\n\nexport const addCharecterToFavAction = (userId, data) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const jwttoken = \"Bearer \" + token;\n    console.log(jwttoken);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': jwttoken\n      }\n    };\n    axios.post(`http://localhost:5000/users/${userId}/charecters/favourite/add`, data, config).then(response => {\n      console.log(response);\n      dispatch({\n        type: 'FAVOURITE_CHARECTERS',\n        payload: response.data.data.favcharecters\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; // removing charecter from the user's favorite list of charecters\n\nexport const removeCharecterToFavAction = (userId, charecterId) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const jwttoken = \"Bearer \" + token;\n    console.log(jwttoken);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': jwttoken\n      }\n    };\n    const data = {\n      charecterId: charecterId\n    };\n    axios.post(`http://localhost:5000/users/${userId}/charecters/favourite/delete`, data, config).then(response => {\n      console.log(response);\n      dispatch({\n        type: 'FAVOURITE_CHARECTERS',\n        payload: response.data.data.favcharecters\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; // Getting favourite charecters of user\n\nexport const getFavCharectersAction = userId => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const jwttoken = \"Bearer \" + token;\n    console.log(jwttoken);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': jwttoken\n      }\n    };\n    axios.get(`http://localhost:5000/users/${userId}/charecters/favourite`, config).then(response => {\n      console.log(response);\n      dispatch({\n        type: 'FAVOURITE_CHARECTERS',\n        payload: response.data.data.favcharecters\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //Getting favourite  Comics of user \n\nexport const getFavComicsAction = userId => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const jwttoken = \"Bearer \" + token;\n    console.log(jwttoken);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': jwttoken\n      }\n    };\n    axios.get(`http://localhost:5000/users/${userId}/comics/favourite`, config).then(response => {\n      console.log(response);\n      dispatch({\n        type: 'FAVOURITE_COMICS',\n        payload: response.data.data.favcomics\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; //Adding comic to the favorite list of comics of user\n\nexport const addComicToFavAction = (userId, data) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const jwttoken = \"Bearer \" + token;\n    console.log(jwttoken);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': jwttoken\n      }\n    };\n    axios.post(`http://localhost:5000/users/${userId}/comics/favourite/add`, data, config).then(response => {\n      console.log(response);\n      dispatch({\n        type: 'FAVOURITE_COMICS',\n        payload: response.data.data.favcomics\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}; // removing comic from the user's favorite list of comics\n\nexport const removeComicToFavAction = (userId, comicId) => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const jwttoken = \"Bearer \" + token;\n    console.log(jwttoken);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': jwttoken\n      }\n    };\n    const data = {\n      comicId: comicId\n    };\n    axios.post(`http://localhost:5000/users/${userId}/comics/favourite/delete`, data, config).then(response => {\n      console.log(response);\n      dispatch({\n        type: 'FAVOURITE_COMICS',\n        payload: response.data.data.favcomics\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontEnd/src/actions/getDataAction.js"],"names":["axios","CryptoJS","ts","Date","getTime","hash","MD5","toString","url","getCharectersAction","dispatch","get","then","response","type","payload","data","results","console","log","catch","error","getComicsAction","getComicsSearchAction","query","getCharectersSearchAction","isLoadingAction","getCharecterByIdAction","id","getComicByIdAction","addCharecterToFavAction","userId","token","localStorage","getItem","jwttoken","config","headers","post","favcharecters","removeCharecterToFavAction","charecterId","getFavCharectersAction","getFavComicsAction","favcomics","addComicToFavAction","removeComicToFavAction","comicId"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport CryptoJS from 'crypto-js'\r\n\r\n\r\n\r\nlet ts = new Date().getTime();\r\nlet hash = CryptoJS.MD5(ts + '2dafafc5122792c3486bddeb1fe227aab1dd0def' + 'ee182f248ccfa43f509148540e539433').toString();\r\nlet url = `ts=${ts}&apikey=ee182f248ccfa43f509148540e539433&hash=${hash}`\r\n\r\nexport const getCharectersAction = () => {\r\n    return (dispatch) =>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/characters?limit=100&${url}`)\r\n        .then( (response) => {\r\n            dispatch({type:'ALL_CHARECTERS', payload:response.data.data.results});\r\n        // handle success\r\n\r\n      console.log(response.data.data.results);\r\n      })\r\n      .catch(function (error) {\r\n     // handle error\r\n     console.log(error);\r\n     });\r\n    }\r\n}\r\n\r\nexport const getComicsAction = () => {\r\n  return (dispatch) =>{\r\n      axios.get(`https://gateway.marvel.com:443/v1/public/comics?orderBy=title&limit=100&${url}`)\r\n      .then( (response) => {\r\n          dispatch({type:'ALL_COMICS', payload:response.data.data.results});\r\n      // handle success\r\n     console.log(response.data.data.results);\r\n    })\r\n    .catch(function (error) {\r\n   // handle error\r\n   console.log(error);\r\n   });\r\n  }\r\n}\r\n\r\nexport const getComicsSearchAction = (query) =>{\r\n    return  (dispatch) =>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/comics?titleStartsWith=${query}&limit=100&${url}`)\r\n        .then( (response) => {\r\n            dispatch({type:'SEARCH_COMICS', payload:response.data.data.results});\r\n        // handle success\r\n \r\n      })\r\n      .catch(function (error) {\r\n     // handle error\r\n     console.log(error);\r\n     });\r\n}\r\n}\r\n\r\nexport const getCharectersSearchAction = (query) =>{ \r\n    return  (dispatch) =>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/characters?nameStartsWith=${query}&${url}`)\r\n        .then( (response) => {\r\n            dispatch({type:'SEARCH_CHARECTERS', payload:response.data.data.results});\r\n        // handle success\r\n    \r\n      })\r\n      .catch(function (error) {\r\n     // handle error\r\n     console.log(error);\r\n     });\r\n}\r\n}\r\nexport const isLoadingAction = () =>{\r\n    return (dispatch) => {\r\n        dispatch({type : 'LOADING'})\r\n    }\r\n}\r\n// Getting  charecter information from the marvel-api  by using this action\r\nexport const getCharecterByIdAction = (id)=>{\r\n    return (dispatch)=>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/characters/${id}?${url}`)\r\n        .then(response =>{\r\n             console.log(response.data.data.results[0]);\r\n             dispatch({type:'ONE_CHARECTER', payload:response.data.data.results[0]});\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n  \r\n}\r\n// Getting favourite charecters of user by this action\r\nexport const getComicByIdAction = (id)=>{\r\n    return (dispatch)=>{\r\n        axios.get(`https://gateway.marvel.com:443/v1/public/comics/${id}?${url}`)\r\n        .then(response =>{\r\n             console.log(response.data.data.results[0]);\r\n             dispatch({type:'ONE_COMIC', payload:response.data.data.results[0]});\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n  \r\n}\r\n\r\n//Adding charecter to the favorite list of charcters\r\nexport const addCharecterToFavAction = (userId,data)=>{\r\n  \r\n     return (dispatch)=>{   \r\n        const token = localStorage.getItem('token');\r\n         const  jwttoken = \"Bearer \" + token;\r\n         console.log(jwttoken);\r\n         const config ={ headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': jwttoken \r\n          }}\r\n         axios.post(`http://localhost:5000/users/${userId}/charecters/favourite/add`,data, config )\r\n         .then(response=> {\r\n             console.log(response);\r\n            dispatch({type:'FAVOURITE_CHARECTERS', payload:response.data.data.favcharecters});\r\n         })\r\n         .catch(error=>{\r\n            console.log(error);\r\n        })\r\n     }\r\n\r\n}\r\n\r\n// removing charecter from the user's favorite list of charecters\r\nexport const removeCharecterToFavAction = (userId,charecterId)=>{\r\n  \r\n    return (dispatch)=>{   \r\n       const token = localStorage.getItem('token');\r\n        const  jwttoken = \"Bearer \" + token;\r\n        console.log(jwttoken);\r\n        const config ={ headers: {\r\n           'Content-Type': 'application/json',\r\n           'Authorization': jwttoken \r\n         }}\r\n         const data = {\r\n             charecterId: charecterId\r\n         }\r\n        axios.post(`http://localhost:5000/users/${userId}/charecters/favourite/delete`, data, config )\r\n        .then(response=> {\r\n            console.log(response);\r\n           dispatch({type:'FAVOURITE_CHARECTERS', payload:response.data.data.favcharecters});\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n}\r\n// Getting favourite charecters of user\r\nexport const getFavCharectersAction =(userId) =>{\r\n  return (dispatch) =>{\r\n    const token = localStorage.getItem('token');\r\n    const  jwttoken = \"Bearer \" + token;\r\n    console.log(jwttoken);\r\n    const config ={ headers: {\r\n       'Content-Type': 'application/json',\r\n       'Authorization': jwttoken \r\n     }}\r\n    axios.get(`http://localhost:5000/users/${userId}/charecters/favourite`, config )\r\n    .then(response=> {\r\n        console.log(response);\r\n       dispatch({type:'FAVOURITE_CHARECTERS', payload:response.data.data.favcharecters});\r\n    })\r\n    .catch(error=>{\r\n        console.log(error);\r\n    })\r\n       \r\n  }\r\n}\r\n\r\n//Getting favourite  Comics of user \r\nexport const getFavComicsAction =(userId) =>{\r\n    return (dispatch) =>{\r\n      const token = localStorage.getItem('token');\r\n      const  jwttoken = \"Bearer \" + token;\r\n      console.log(jwttoken);\r\n      const config ={ headers: {\r\n         'Content-Type': 'application/json',\r\n         'Authorization': jwttoken \r\n       }}\r\n      axios.get(`http://localhost:5000/users/${userId}/comics/favourite`, config )\r\n      .then(response=> {\r\n          console.log(response);\r\n         dispatch({type:'FAVOURITE_COMICS', payload:response.data.data.favcomics});\r\n      })\r\n      .catch(error=>{\r\n          console.log(error);\r\n      })\r\n         \r\n    }\r\n  }\r\n\r\n//Adding comic to the favorite list of comics of user\r\nexport const addComicToFavAction = (userId,data)=>{\r\n  \r\n    return (dispatch)=>{   \r\n       const token = localStorage.getItem('token');\r\n        const  jwttoken = \"Bearer \" + token;\r\n        console.log(jwttoken);\r\n        const config ={ headers: {\r\n           'Content-Type': 'application/json',\r\n           'Authorization': jwttoken \r\n         }}\r\n        axios.post(`http://localhost:5000/users/${userId}/comics/favourite/add`,data, config)\r\n        .then(response=> {\r\n            console.log(response);\r\n           dispatch({type:'FAVOURITE_COMICS', payload:response.data.data.favcomics});\r\n        })\r\n        .catch(error=>{\r\n           console.log(error);\r\n       })\r\n    }\r\n\r\n}\r\n// removing comic from the user's favorite list of comics\r\nexport const removeComicToFavAction = (userId,comicId)=>{\r\n  \r\n    return (dispatch)=>{   \r\n       const token = localStorage.getItem('token');\r\n        const  jwttoken = \"Bearer \" + token;\r\n        console.log(jwttoken);\r\n        const config ={ headers: {\r\n           'Content-Type': 'application/json',\r\n           'Authorization': jwttoken \r\n         }}\r\n         const data = {\r\n             comicId:comicId\r\n         }\r\n        axios.post(`http://localhost:5000/users/${userId}/comics/favourite/delete`, data, config )\r\n        .then(response=> {\r\n            console.log(response);\r\n           dispatch({type:'FAVOURITE_COMICS', payload:response.data.data.favcomics});\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}