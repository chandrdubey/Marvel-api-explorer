{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\React.js\\\\Learning React\\\\marvel-superstars\\\\src\\\\frontend\\\\src\\\\components\\\\CharcterPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { getCharecterById } from \"../actions/getDataAction\";\n\nclass CharcterPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      charecter: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.dispatch(getCharecterById(params.id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"hello\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    charecter: state.marvelData.charecters,\n    isLoading: state.marvelData.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCharecterById: () => dispatch(getCharectersAction()),\n    getCharectersSearch: query => dispatch(getCharectersSearchAction(query)),\n    Loading: () => dispatch(isLoadingAction())\n  };\n};\n\nexport default CharcterPageComponent;","map":{"version":3,"sources":["D:/web d/React.js/Learning React/marvel-superstars/src/frontend/src/components/CharcterPageComponent.js"],"names":["React","Component","getCharecterById","CharcterPageComponent","constructor","props","state","charecter","componentDidMount","match","params","dispatch","id","render","mapStateToProps","marvelData","charecters","isLoading","mapDispatchToProps","getCharectersAction","getCharectersSearch","query","getCharectersSearchAction","Loading","isLoadingAction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,MAAMC,qBAAN,SAAoCF,SAApC,CAA8C;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAG;AADH,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAAT,QAAwB,KAAKL,KAAnC;AACA,SAAKA,KAAL,CAAWM,QAAX,CAAoBT,gBAAgB,CAACQ,MAAM,CAACE,EAAR,CAApC;AAEH;;AAEHC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADF,CADF,CADF,CADF;AAWD;;AAzB2C;;AA4B9C,MAAMC,eAAe,GAAIR,KAAD,IAAU;AAC9B,SAAO;AACFC,IAAAA,SAAS,EAAGD,KAAK,CAACS,UAAN,CAAiBC,UAD3B;AAEDC,IAAAA,SAAS,EAAIX,KAAK,CAACS,UAAN,CAAiBE;AAF7B,GAAP;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAIP,QAAD,IAAa;AACtC,SAAM;AACJT,IAAAA,gBAAgB,EAAG,MAAMS,QAAQ,CAACQ,mBAAmB,EAApB,CAD7B;AAEJC,IAAAA,mBAAmB,EAAIC,KAAD,IAAWV,QAAQ,CAACW,yBAAyB,CAACD,KAAD,CAA1B,CAFrC;AAGJE,IAAAA,OAAO,EAAG,MAAMZ,QAAQ,CAACa,eAAe,EAAhB;AAHpB,GAAN;AAKD,CAND;;AAOA,eAAerB,qBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCharecterById } from \"../actions/getDataAction\";\r\n\r\nclass CharcterPageComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            charecter : {}\r\n        }\r\n    }\r\n    componentDidMount (){\r\n        const { match: { params } } = this.props;\r\n        this.props.dispatch(getCharecterById(params.id));\r\n      \r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid \">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto\">\r\n                <h1>hello</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n         charecter : state.marvelData.charecters,\r\n          isLoading :  state.marvelData.isLoading\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    getCharecterById : () => dispatch(getCharectersAction()),\r\n    getCharectersSearch : (query) => dispatch(getCharectersSearchAction(query)),\r\n    Loading : () => dispatch(isLoadingAction())\r\n  }\r\n}\r\nexport default CharcterPageComponent;\r\n"]},"metadata":{},"sourceType":"module"}