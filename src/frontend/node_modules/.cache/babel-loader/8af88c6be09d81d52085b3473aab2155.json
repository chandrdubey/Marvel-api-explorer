{"ast":null,"code":"var _jsxFileName = \"D:\\\\web d\\\\react.js\\\\learning react\\\\marvel-superstars\\\\src\\\\frontEnd\\\\src\\\\components\\\\CharcterPageComponent.js\";\nimport React, { Component } from \"react\";\nimport { getCharecterByIdAction, isLoadingAction, addCharecterToFavAction, removeCharecterToFavAction } from \"../actions/getDataAction\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./Spinner\";\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\n\nclass CharcterPageComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFavourite = () => {\n      if (!this.props.isLoggedIn) {\n        this.props.history.push(\"/login\");\n      } else {\n        //  console.log(\"lo\");\n        this.setState({\n          isFavourite: true\n        });\n        const {\n          match: {\n            params\n          }\n        } = this.props;\n        const userId = this.props.currentUser.id;\n        const data = {\n          charecter_id: params.id,\n          name: this.props.charecter.name,\n          image: this.props.charecter.thumbnail.path + \".\" + this.props.charecter.thumbnail.extension\n        };\n        this.props.addCharecterFav(userId, data);\n      }\n    };\n\n    this.handleUnFavourite = () => {\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      const userId = this.props.currentUser.id;\n      console.log(\"hello\");\n      this.setState({\n        isFavourite: false\n      });\n      this.props.removeCharecterToFav(userId, params.id);\n    };\n\n    this.state = {\n      isFavourite: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(process.env.MARVEL_API_PUBLIC_KEY, \"hell\");\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.props.Loading();\n    this.props.getCharecterById(params.id);\n    let user = this.props.currentUser;\n    console.log(this.props.favCharecters);\n    console.log(user);\n    console.log(`is ${this.props.isLoggedIn}`);\n\n    if (this.props.favCharecters) {\n      if (this.props.favCharecters.length > 0 && this.props.favCharecters.some(charecterMarvel => charecterMarvel.charecter_id === params.id)) {\n        console.log(\"hello indaia\");\n        this.setState({\n          isFavourite: true\n        });\n      }\n    }\n  }\n\n  render() {\n    let image, knowMorUrl;\n    let total_comics, comics, series, series_avai;\n\n    if (!isEmpty(this.props.charecter)) {\n      image = this.props.charecter.thumbnail.path + \".\" + this.props.charecter.thumbnail.extension;\n      let image_not = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n\n      if (image === image_not) {\n        image = \"https://image.flaticon.com/icons/png/512/21/21104.png\";\n      }\n\n      total_comics = this.props.charecter.comics.available;\n      comics = this.props.charecter.comics.items;\n      series = this.props.charecter.series;\n      knowMorUrl = this.props.charecter.urls;\n      series_avai = series.available; //  console.log(knowMorUrl);\n    }\n\n    return this.props.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"margin-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 35\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\",\n      className: \"container-fluid show-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row set-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-12 charecter-image \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      className: \"img-fluid page-image\",\n      alt: \"charecter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-7 charecter-detail \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, this.props.charecter.name, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, this.state.isFavourite ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleUnFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    }, \"UnFavourite\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn  fav-btn\",\n      onClick: this.handleFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }, \"Favourite\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, this.props.charecter.description), total_comics && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    }, this.props.charecter.name, \" featured in  comics (\", total_comics, \")\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"char-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(MarvelPageItemComponent, {\n      act: 1,\n      comics: comics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }))), series_avai > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, this.props.charecter.name, \" featured in series (\", series.available, \")\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(MarvelPageItemComponent, {\n      comics: series.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }))), knowMorUrl && /*#__PURE__*/React.createElement(\"a\", {\n      href: knowMorUrl[0].url,\n      className: \"btn btn-get-started\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }, \"Know more\"))))))));\n  }\n\n}\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser,\n    charecter: state.marvelData.charecter,\n    isLoading: state.marvelData.isLoading,\n    isLoggedIn: state.auth.isLoggedIn,\n    favCharecters: state.marvelData.favCharecters\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCharecterById: id => dispatch(getCharecterByIdAction(id)),\n    Loading: () => dispatch(isLoadingAction()),\n    addCharecterFav: (userId, data) => dispatch(addCharecterToFavAction(userId, data)),\n    removeCharecterToFav: (userId, charecterId) => dispatch(removeCharecterToFavAction(userId, charecterId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharcterPageComponent);","map":{"version":3,"sources":["D:/web d/react.js/learning react/marvel-superstars/src/frontEnd/src/components/CharcterPageComponent.js"],"names":["React","Component","getCharecterByIdAction","isLoadingAction","addCharecterToFavAction","removeCharecterToFavAction","connect","Spinner","MarvelPageItemComponent","CharcterPageComponent","constructor","props","handleFavourite","isLoggedIn","history","push","setState","isFavourite","match","params","userId","currentUser","id","data","charecter_id","name","charecter","image","thumbnail","path","extension","addCharecterFav","handleUnFavourite","console","log","removeCharecterToFav","state","componentDidMount","process","env","MARVEL_API_PUBLIC_KEY","Loading","getCharecterById","user","favCharecters","length","some","charecterMarvel","render","knowMorUrl","total_comics","comics","series","series_avai","isEmpty","image_not","available","items","urls","isLoading","description","url","obj","key","hasOwnProperty","mapStateToProps","auth","marvelData","mapDispatchToProps","dispatch","charecterId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,sBADF,EAEEC,eAFF,EAGEC,uBAHF,EAIEC,0BAJF,QAKO,0BALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;AAEA,MAAMC,qBAAN,SAAoCR,SAApC,CAA8C;AAC5CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiCnBC,eAjCmB,GAiCD,MAAM;AACtB,UAAI,CAAC,KAAKD,KAAL,CAAWE,UAAhB,EAA4B;AAC1B,aAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,OAFD,MAEO;AACP;AACE,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE;AADD,SAAd;AAGA,cAAM;AACJC,UAAAA,KAAK,EAAE;AAAEC,YAAAA;AAAF;AADH,YAEF,KAAKR,KAFT;AAGA,cAAMS,MAAM,GAAG,KAAKT,KAAL,CAAWU,WAAX,CAAuBC,EAAtC;AACA,cAAMC,IAAI,GAAG;AACXC,UAAAA,YAAY,EAAEL,MAAM,CAACG,EADV;AAEXG,UAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWe,SAAX,CAAqBD,IAFhB;AAGXE,UAAAA,KAAK,EACH,KAAKhB,KAAL,CAAWe,SAAX,CAAqBE,SAArB,CAA+BC,IAA/B,GACA,GADA,GAEA,KAAKlB,KAAL,CAAWe,SAAX,CAAqBE,SAArB,CAA+BE;AANtB,SAAb;AAQA,aAAKnB,KAAL,CAAWoB,eAAX,CAA2BX,MAA3B,EAAmCG,IAAnC;AACD;AACF,KAvDkB;;AAAA,SAwDnBS,iBAxDmB,GAwDC,MAAM;AACxB,YAAM;AACJd,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AADH,UAEF,KAAKR,KAFT;AAGA,YAAMS,MAAM,GAAG,KAAKT,KAAL,CAAWU,WAAX,CAAuBC,EAAtC;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKlB,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE;AADD,OAAd;AAGA,WAAKN,KAAL,CAAWwB,oBAAX,CAAgCf,MAAhC,EAAwCD,MAAM,CAACG,EAA/C;AACD,KAlEkB;;AAEjB,SAAKc,KAAL,GAAa;AACXnB,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDoB,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACC,GAAR,CAAYC,qBAAxB,EAA8C,MAA9C;AACA,UAAM;AACJtB,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AADH,QAEF,KAAKR,KAFT;AAGA,SAAKA,KAAL,CAAW8B,OAAX;AACA,SAAK9B,KAAL,CAAW+B,gBAAX,CAA4BvB,MAAM,CAACG,EAAnC;AACA,QAAIqB,IAAI,GAAG,KAAKhC,KAAL,CAAWU,WAAtB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWiC,aAAvB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAa,MAAK,KAAKvB,KAAL,CAAWE,UAAW,EAAxC;;AAEA,QAAI,KAAKF,KAAL,CAAWiC,aAAf,EAA8B;AAC5B,UACE,KAAKjC,KAAL,CAAWiC,aAAX,CAAyBC,MAAzB,GAAkC,CAAlC,IACA,KAAKlC,KAAL,CAAWiC,aAAX,CAAyBE,IAAzB,CACGC,eAAD,IAAqBA,eAAe,CAACvB,YAAhB,KAAiCL,MAAM,CAACG,EAD/D,CAFF,EAKE;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAKlB,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE;AADD,SAAd;AAGD;AACF;AACF;;AAmCD+B,EAAAA,MAAM,GAAG;AAEP,QAAIrB,KAAJ,EAAWsB,UAAX;AACA,QAAIC,YAAJ,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAiCC,WAAjC;;AACA,QAAI,CAACC,OAAO,CAAC,KAAK3C,KAAL,CAAWe,SAAZ,CAAZ,EAAoC;AAIlCC,MAAAA,KAAK,GACH,KAAKhB,KAAL,CAAWe,SAAX,CAAqBE,SAArB,CAA+BC,IAA/B,GACA,GADA,GAEA,KAAKlB,KAAL,CAAWe,SAAX,CAAqBE,SAArB,CAA+BE,SAHjC;AAIE,UAAIyB,SAAS,GAAE,qEAAf;;AACC,UAAK5B,KAAK,KAAK4B,SAAf,EAA0B;AAC3B5B,QAAAA,KAAK,GAAG,uDAAR;AACD;;AACDuB,MAAAA,YAAY,GAAG,KAAKvC,KAAL,CAAWe,SAAX,CAAqByB,MAArB,CAA4BK,SAA3C;AACAL,MAAAA,MAAM,GAAG,KAAKxC,KAAL,CAAWe,SAAX,CAAqByB,MAArB,CAA4BM,KAArC;AACAL,MAAAA,MAAM,GAAG,KAAKzC,KAAL,CAAWe,SAAX,CAAqB0B,MAA9B;AACAH,MAAAA,UAAU,GAAG,KAAKtC,KAAL,CAAWe,SAAX,CAAqBgC,IAAlC;AACCL,MAAAA,WAAW,GAAED,MAAM,CAACI,SAApB,CAhBiC,CAiBlC;AACD;;AACD,WAAO,KAAK7C,KAAL,CAAWgD,SAAX,gBACL;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CADK,gBAGL,uDACE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,2BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEhC,KADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,GAAG,EAAC,WAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWe,SAAX,CAAqBD,IADxB,eAEE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKW,KAAL,CAAWnB,WAAX,gBACC;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,KAAKe,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,gBAQC;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,KAAKpB,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATJ,CAFF,CADF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWe,SAAX,CAAqBkC,WAAzB,CAtBF,EAuBGV,YAAY,iBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvC,KAAL,CAAWe,SAAX,CAAqBD,IADxB,4BACoDyB,YADpD,MADiB,eAIjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJiB,eAKjB;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,uBAAD;AAAyB,MAAA,GAAG,EAAG,CAA/B;AAAkC,MAAA,MAAM,EAAEC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALiB,CAvBrB,EAiCEE,WAAW,GAAG,CAAd,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK1C,KAAL,CAAWe,SAAX,CAAqBD,IADxB,2BACmD2B,MAAM,CAACI,SAD1D,MADkB,eAIlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJkB,eAKlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,uBAAD;AAAyB,MAAA,MAAM,EAAEJ,MAAM,CAACK,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALkB,CAjCtB,EA0CGR,UAAU,iBACT;AACE,MAAA,IAAI,EAAEA,UAAU,CAAC,CAAD,CAAV,CAAcY,GADtB;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA3CJ,CADF,CARF,CADF,CADF,CADF,CADF,CAHF;AA0ED;;AArK2C;;AAuK9C,SAASP,OAAT,CAAiBQ,GAAjB,EAAsB;AACpB,OAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B,OAAO,KAAP;AAC9B;;AACD,SAAO,IAAP;AACD;;AACD,MAAME,eAAe,GAAI7B,KAAD,IAAW;AACjC,SAAO;AACLf,IAAAA,WAAW,EAAEe,KAAK,CAAC8B,IAAN,CAAW7C,WADnB;AAELK,IAAAA,SAAS,EAAEU,KAAK,CAAC+B,UAAN,CAAiBzC,SAFvB;AAGLiC,IAAAA,SAAS,EAAEvB,KAAK,CAAC+B,UAAN,CAAiBR,SAHvB;AAIL9C,IAAAA,UAAU,EAAEuB,KAAK,CAAC8B,IAAN,CAAWrD,UAJlB;AAKL+B,IAAAA,aAAa,EAAER,KAAK,CAAC+B,UAAN,CAAiBvB;AAL3B,GAAP;AAOD,CARD;;AASA,MAAMwB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL3B,IAAAA,gBAAgB,EAAGpB,EAAD,IAAQ+C,QAAQ,CAACnE,sBAAsB,CAACoB,EAAD,CAAvB,CAD7B;AAELmB,IAAAA,OAAO,EAAE,MAAM4B,QAAQ,CAAClE,eAAe,EAAhB,CAFlB;AAGL4B,IAAAA,eAAe,EAAE,CAACX,MAAD,EAASG,IAAT,KACf8C,QAAQ,CAACjE,uBAAuB,CAACgB,MAAD,EAASG,IAAT,CAAxB,CAJL;AAKLY,IAAAA,oBAAoB,EAAE,CAACf,MAAD,EAASkD,WAAT,KACpBD,QAAQ,CAAChE,0BAA0B,CAACe,MAAD,EAASkD,WAAT,CAA3B;AANL,GAAP;AASD,CAVD;;AAWA,eAAehE,OAAO,CACpB2D,eADoB,EAEpBG,kBAFoB,CAAP,CAGb3D,qBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  getCharecterByIdAction,\r\n  isLoadingAction,\r\n  addCharecterToFavAction,\r\n  removeCharecterToFavAction,\r\n} from \"../actions/getDataAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"./Spinner\";\r\nimport MarvelPageItemComponent from \"./MarvelPageItemComponent\";\r\n\r\nclass CharcterPageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFavourite: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(process.env.MARVEL_API_PUBLIC_KEY,\"hell\");\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    this.props.Loading();\r\n    this.props.getCharecterById(params.id);\r\n    let user = this.props.currentUser;\r\n    console.log(this.props.favCharecters);\r\n    console.log(user);\r\n    console.log(`is ${this.props.isLoggedIn}`);\r\n\r\n    if (this.props.favCharecters) {\r\n      if (\r\n        this.props.favCharecters.length > 0 &&\r\n        this.props.favCharecters.some(\r\n          (charecterMarvel) => charecterMarvel.charecter_id === params.id\r\n        )\r\n      ) {\r\n        console.log(\"hello indaia\");\r\n        this.setState({\r\n          isFavourite: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  handleFavourite = () => {\r\n    if (!this.props.isLoggedIn) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n    //  console.log(\"lo\");\r\n      this.setState({\r\n        isFavourite: true,\r\n      });\r\n      const {\r\n        match: { params },\r\n      } = this.props;\r\n      const userId = this.props.currentUser.id;\r\n      const data = {\r\n        charecter_id: params.id,\r\n        name: this.props.charecter.name,\r\n        image:\r\n          this.props.charecter.thumbnail.path +\r\n          \".\" +\r\n          this.props.charecter.thumbnail.extension,\r\n      };\r\n      this.props.addCharecterFav(userId, data);\r\n    }\r\n  };\r\n  handleUnFavourite = () => {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    const userId = this.props.currentUser.id;\r\n    console.log(\"hello\");\r\n    this.setState({\r\n      isFavourite: false,\r\n    });\r\n    this.props.removeCharecterToFav(userId, params.id);\r\n  };\r\n  render() {\r\n    \r\n    let image, knowMorUrl;\r\n    let total_comics, comics, series,series_avai;\r\n    if (!isEmpty(this.props.charecter)) {\r\n    \r\n  \r\n    \r\n      image =\r\n        this.props.charecter.thumbnail.path +\r\n        \".\" +\r\n        this.props.charecter.thumbnail.extension;\r\n        let image_not =\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\r\n         if ( image === image_not) {\r\n        image = \"https://image.flaticon.com/icons/png/512/21/21104.png\";\r\n      }\r\n      total_comics = this.props.charecter.comics.available;\r\n      comics = this.props.charecter.comics.items;\r\n      series = this.props.charecter.series;\r\n      knowMorUrl = this.props.charecter.urls;\r\n       series_avai= series.available;\r\n      //  console.log(knowMorUrl);\r\n    }\r\n    return this.props.isLoading ? (\r\n      <div className=\"margin-top\"><Spinner /></div> \r\n    ) : (\r\n      <>\r\n        <div id=\"header\" className=\"container-fluid show-page\">\r\n          <div className=\"row set-row\">\r\n            <div className=\"col-10 mx-auto\">\r\n              <div className=\"row \">\r\n                <div className=\"col-lg-5 col-md-12 charecter-image \">\r\n                  <img\r\n                    src={image}\r\n                    className=\"img-fluid page-image\"\r\n                    alt=\"charecter\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-7 charecter-detail \">\r\n                  <div className=\"\">\r\n                    <h3>\r\n                      {this.props.charecter.name}\r\n                      <span className=\"float-right\">\r\n                        {this.state.isFavourite ? (\r\n                          <button\r\n                            className=\"btn  fav-btn\"\r\n                            onClick={this.handleUnFavourite}\r\n                          >\r\n                            UnFavourite\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn  fav-btn\"\r\n                            onClick={this.handleFavourite}\r\n                          >\r\n                            Favourite\r\n                          </button>\r\n                        )}\r\n                      </span>\r\n                    </h3>\r\n                    <hr />\r\n                    <p>{this.props.charecter.description}</p>\r\n                    {total_comics && ( <div>\r\n                      <h3>\r\n                        {this.props.charecter.name} featured in  comics ({total_comics})\r\n                      </h3>\r\n                      <hr />\r\n                      <ul className=\"char-page\">\r\n                        <MarvelPageItemComponent act ={1} comics={comics} />\r\n                      </ul>\r\n                    </div>)}\r\n                   \r\n                   {series_avai > 0 && (<div>\r\n                      <h3>\r\n                        {this.props.charecter.name} featured in series ({series.available})\r\n                      </h3>\r\n                      <hr />\r\n                      <ul>\r\n                        <MarvelPageItemComponent comics={series.items} />\r\n                      </ul>\r\n                    </div>) }\r\n                    {knowMorUrl && (\r\n                      <a\r\n                        href={knowMorUrl[0].url}\r\n                        className=\"btn btn-get-started\"\r\n                      >\r\n                        Know more\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction isEmpty(obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) return false;\r\n  }\r\n  return true;\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.auth.currentUser,\r\n    charecter: state.marvelData.charecter,\r\n    isLoading: state.marvelData.isLoading,\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    favCharecters: state.marvelData.favCharecters,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCharecterById: (id) => dispatch(getCharecterByIdAction(id)),\r\n    Loading: () => dispatch(isLoadingAction()),\r\n    addCharecterFav: (userId, data) =>\r\n      dispatch(addCharecterToFavAction(userId, data)),\r\n    removeCharecterToFav: (userId, charecterId) =>\r\n      dispatch(removeCharecterToFavAction(userId, charecterId)),\r\n    \r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CharcterPageComponent);\r\n"]},"metadata":{},"sourceType":"module"}